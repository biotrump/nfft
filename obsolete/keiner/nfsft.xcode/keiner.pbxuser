// !$*UTF8*$!
{
	08FB7793FE84155DC02AAC07 = {
		activeBuildStyle = 014CEA460018CE2711CA2923;
		activeExecutable = 4EB20A1E07D4B30C00FD1AB8;
		activeTarget = 8DD76F620486A84900D96B5E;
		addToTargets = (
		);
		breakpoints = (
			4EAD67A3083A917100C61F13,
		);
		codeSenseManager = 4E25C4AC070DDADD0005BF02;
		executables = (
			4EB20A1E07D4B30C00FD1AB8,
			4E6E40E9082CB6C600642FF0,
		);
		perUserDictionary = {
			PBXConfiguration.PBXFileTableDataSource3.PBXBookmarksDataSource = {
				PBXFileTableDataSourceColumnSortingDirectionKey = "-1";
				PBXFileTableDataSourceColumnSortingKey = PBXBookmarksDataSource_NameID;
				PBXFileTableDataSourceColumnWidthsKey = (
					245.2085,
					228.5991,
					255.5835,
				);
				PBXFileTableDataSourceColumnsKey = (
					PBXBookmarksDataSource_LocationID,
					PBXBookmarksDataSource_NameID,
					PBXBookmarksDataSource_CommentsID,
				);
			};
			PBXConfiguration.PBXFileTableDataSource3.PBXErrorsWarningsDataSource = {
				PBXFileTableDataSourceColumnSortingDirectionKey = "-1";
				PBXFileTableDataSourceColumnSortingKey = PBXErrorsWarningsDataSource_LocationID;
				PBXFileTableDataSourceColumnWidthsKey = (
					20,
					577.8799,
					311.2085,
				);
				PBXFileTableDataSourceColumnsKey = (
					PBXErrorsWarningsDataSource_TypeID,
					PBXErrorsWarningsDataSource_MessageID,
					PBXErrorsWarningsDataSource_LocationID,
				);
			};
			PBXConfiguration.PBXFileTableDataSource3.PBXExecutablesDataSource = {
				PBXFileTableDataSourceColumnSortingDirectionKey = "-1";
				PBXFileTableDataSourceColumnSortingKey = PBXExecutablesDataSource_NameID;
				PBXFileTableDataSourceColumnWidthsKey = (
					22,
					588.7974,
					305.5835,
				);
				PBXFileTableDataSourceColumnsKey = (
					PBXExecutablesDataSource_ActiveFlagID,
					PBXExecutablesDataSource_NameID,
					PBXExecutablesDataSource_CommentsID,
				);
			};
			PBXConfiguration.PBXFileTableDataSource3.PBXFileTableDataSource = {
				PBXFileTableDataSourceColumnSortingDirectionKey = "-1";
				PBXFileTableDataSourceColumnSortingKey = PBXFileDataSource_Filename_ColumnID;
				PBXFileTableDataSourceColumnWidthsKey = (
					20,
					640,
					20,
					114,
					43,
					43,
					20,
				);
				PBXFileTableDataSourceColumnsKey = (
					PBXFileDataSource_FiletypeID,
					PBXFileDataSource_Filename_ColumnID,
					PBXFileDataSource_Built_ColumnID,
					PBXFileDataSource_ObjectSize_ColumnID,
					PBXFileDataSource_Errors_ColumnID,
					PBXFileDataSource_Warnings_ColumnID,
					PBXFileDataSource_Target_ColumnID,
				);
			};
			PBXConfiguration.PBXFileTableDataSource3.PBXFindDataSource = {
				PBXFileTableDataSourceColumnSortingDirectionKey = "-1";
				PBXFileTableDataSourceColumnSortingKey = PBXFindDataSource_LocationID;
				PBXFileTableDataSourceColumnWidthsKey = (
					333.2974,
					336.2085,
				);
				PBXFileTableDataSourceColumnsKey = (
					PBXFindDataSource_MessageID,
					PBXFindDataSource_LocationID,
				);
			};
			PBXConfiguration.PBXFileTableDataSource3.PBXSymbolsDataSource = {
				PBXFileTableDataSourceColumnSortingDirectionKey = "-1";
				PBXFileTableDataSourceColumnSortingKey = PBXSymbolsDataSource_SymbolNameID;
				PBXFileTableDataSourceColumnWidthsKey = (
					16,
					279.8008,
					309.0356,
					286.2085,
				);
				PBXFileTableDataSourceColumnsKey = (
					PBXSymbolsDataSource_SymbolTypeIconID,
					PBXSymbolsDataSource_SymbolNameID,
					PBXSymbolsDataSource_SymbolTypeID,
					PBXSymbolsDataSource_ReferenceNameID,
				);
			};
			PBXConfiguration.PBXFileTableDataSource3.XCSCMDataSource = {
				PBXFileTableDataSourceColumnSortingDirectionKey = "-1";
				PBXFileTableDataSourceColumnSortingKey = PBXFileDataSource_Filename_ColumnID;
				PBXFileTableDataSourceColumnWidthsKey = (
					20,
					20,
					671,
					20,
					104,
					43,
					43,
					20,
				);
				PBXFileTableDataSourceColumnsKey = (
					PBXFileDataSource_SCM_ColumnID,
					PBXFileDataSource_FiletypeID,
					PBXFileDataSource_Filename_ColumnID,
					PBXFileDataSource_Built_ColumnID,
					PBXFileDataSource_ObjectSize_ColumnID,
					PBXFileDataSource_Errors_ColumnID,
					PBXFileDataSource_Warnings_ColumnID,
					PBXFileDataSource_Target_ColumnID,
				);
			};
			PBXConfiguration.PBXTargetDataSource.PBXTargetDataSource = {
				PBXFileTableDataSourceColumnSortingDirectionKey = 1;
				PBXFileTableDataSourceColumnSortingKey = PBXTargetDataSource_PrimaryAttribute;
				PBXFileTableDataSourceColumnWidthsKey = (
					20,
					542,
					116,
					20,
					116,
					43,
					43,
				);
				PBXFileTableDataSourceColumnsKey = (
					PBXFileDataSource_FiletypeID,
					PBXFileDataSource_Filename_ColumnID,
					PBXTargetDataSource_PrimaryAttribute,
					PBXFileDataSource_Built_ColumnID,
					PBXFileDataSource_ObjectSize_ColumnID,
					PBXFileDataSource_Errors_ColumnID,
					PBXFileDataSource_Warnings_ColumnID,
				);
			};
			PBXPerProjectTemplateStateSaveDate = 138050858;
			PBXPrepackagedSmartGroups_v2 = (
				{
					PBXTransientLocationAtTop = bottom;
					absolutePathToBundle = "";
					activationKey = OldTargetSmartGroup;
					clz = PBXTargetSmartGroup;
					description = "Displays all targets of the project.";
					globalID = 1C37FABC04509CD000000102;
					name = Targets;
					preferences = {
						image = Targets;
					};
				},
				{
					PBXTransientLocationAtTop = bottom;
					absolutePathToBundle = "";
					clz = PBXTargetSmartGroup2;
					description = "Displays all targets of the project as well as nested build phases.";
					globalID = 1C37FBAC04509CD000000102;
					name = Targets;
					preferences = {
						image = Targets;
					};
				},
				{
					PBXTransientLocationAtTop = bottom;
					absolutePathToBundle = "";
					clz = PBXExecutablesSmartGroup;
					description = "Displays all executables of the project.";
					globalID = 1C37FAAC04509CD000000102;
					name = Executables;
					preferences = {
						image = Executable;
					};
				},
				{
					" PBXTransientLocationAtTop " = bottom;
					absolutePathToBundle = "";
					clz = PBXErrorsWarningsSmartGroup;
					description = "Displays files with errors or warnings.";
					globalID = 1C08E77C0454961000C914BD;
					name = "Errors and Warnings";
					preferences = {
						fnmatch = "";
						image = WarningsErrors;
						recursive = 1;
						regex = "";
						root = "<PROJECT>";
					};
				},
				{
					PBXTransientLocationAtTop = bottom;
					absolutePathToBundle = "";
					clz = PBXFilenameSmartGroup;
					description = "Filters items in a given group (potentially recursively) based on matching the name with the regular expression of the filter.";
					globalID = 1CC0EA4004350EF90044410B;
					name = "Implementation Files";
					preferences = {
						canSave = 1;
						fnmatch = "";
						image = SmartFolder;
						isLeaf = 0;
						recursive = 1;
						regex = "?*\\.[mcMC]";
						root = "<PROJECT>";
					};
				},
				{
					PBXTransientLocationAtTop = bottom;
					absolutePathToBundle = "";
					clz = PBXFilenameSmartGroup;
					description = "This group displays Interface Builder NIB Files.";
					globalID = 1CC0EA4004350EF90041110B;
					name = "NIB Files";
					preferences = {
						canSave = 1;
						fnmatch = "*.nib";
						image = SmartFolder;
						isLeaf = 0;
						recursive = 1;
						regex = "";
						root = "<PROJECT>";
					};
				},
				{
					PBXTransientLocationAtTop = no;
					absolutePathToBundle = "";
					clz = PBXFindSmartGroup;
					description = "Displays Find Results.";
					globalID = 1C37FABC05509CD000000102;
					name = "Find Results";
					preferences = {
						image = spyglass;
					};
				},
				{
					PBXTransientLocationAtTop = no;
					absolutePathToBundle = "";
					clz = PBXBookmarksSmartGroup;
					description = "Displays Project Bookmarks.";
					globalID = 1C37FABC05539CD112110102;
					name = Bookmarks;
					preferences = {
						image = Bookmarks;
					};
				},
				{
					PBXTransientLocationAtTop = bottom;
					absolutePathToBundle = "";
					clz = XCSCMSmartGroup;
					description = "Displays files with interesting SCM status.";
					globalID = E2644B35053B69B200211256;
					name = SCM;
					preferences = {
						image = PBXRepository;
						isLeaf = 0;
					};
				},
				{
					PBXTransientLocationAtTop = bottom;
					absolutePathToBundle = "";
					clz = PBXSymbolsSmartGroup;
					description = "Displays all symbols for the project.";
					globalID = 1C37FABC04509CD000100104;
					name = "Project Symbols";
					preferences = {
						image = ProjectSymbols;
						isLeaf = 1;
					};
				},
				{
					PBXTransientLocationAtTop = bottom;
					absolutePathToBundle = "";
					clz = PBXFilenameSmartGroup;
					description = "Filters items in a given group (potentially recursively) based on matching the name with the regular expression of the filter.";
					globalID = PBXTemplateMarker;
					name = "Simple Filter SmartGroup";
					preferences = {
						canSave = 1;
						fnmatch = "*.nib";
						image = SmartFolder;
						isLeaf = 0;
						recursive = 1;
						regex = "";
						root = "<PROJECT>";
					};
				},
				{
					PBXTransientLocationAtTop = bottom;
					absolutePathToBundle = "";
					clz = PBXFilenameSmartGroup;
					description = "Filters items in a given group (potentially recursively) based on matching the name with the regular expression of the filter.";
					globalID = PBXTemplateMarker;
					name = "Simple Regular Expression SmartGroup";
					preferences = {
						canSave = 1;
						fnmatch = "";
						image = SmartFolder;
						isLeaf = 0;
						recursive = 1;
						regex = "?*\\.[mcMC]";
						root = "<PROJECT>";
					};
				},
				{
					PBXTransientLocationAtTop = bottom;
					clz = XDDesignSmartGroup;
					description = "Displays Xdesign models";
					globalID = 2E4A936305E6979E00701470;
					name = Design;
					preferences = {
						image = Design;
						isLeaf = 0;
					};
				},
			);
			PBXWorkspaceContents = (
				{
					PBXProjectWorkspaceModule_StateKey_Rev39 = {
						PBXProjectWorkspaceModule_DataSourceSelectionKey_Rev6 = {
							BoundsStr = "{{0, 0}, {1083, 762}}";
							Rows = (
								0,
							);
							VisibleRectStr = "{{0, 0}, {1083, 762}}";
						};
						PBXProjectWorkspaceModule_EditorOpen = false;
						PBXProjectWorkspaceModule_EmbeddedNavigatorGroup = {
							PBXSplitModuleInNavigatorKey = {
								SplitCount = 1;
							};
						};
						PBXProjectWorkspaceModule_GeometryKey_Rev15 = {
							PBXProjectWorkspaceModule_SGTM_Geometry = {
								_collapsingFrameDimension = 0;
								_indexOfCollapsedView = 0;
								_percentageOfCollapsedView = 0;
								sizes = (
									"{{0, 0}, {182, 779}}",
									"{{182, 0}, {1098, 779}}",
								);
							};
						};
						PBXProjectWorkspaceModule_OldDetailFrame = "{{0, 0}, {1098, 779}}";
						PBXProjectWorkspaceModule_OldEditorFrame = "{{0, 0}, {750, 480}}";
						PBXProjectWorkspaceModule_OldSuperviewFrame = "{{182, 0}, {1098, 779}}";
						PBXProjectWorkspaceModule_SGTM = {
							PBXBottomSmartGroupGIDs = (
								1C37FBAC04509CD000000102,
								1C37FAAC04509CD000000102,
								1C08E77C0454961000C914BD,
								1CC0EA4004350EF90044410B,
								1CC0EA4004350EF90041110B,
								1C37FABC05509CD000000102,
								1C37FABC05539CD112110102,
								E2644B35053B69B200211256,
								1C37FABC04509CD000100104,
							);
							PBXSmartGroupTreeModuleColumnData = {
								PBXSmartGroupTreeModuleColumnWidthsKey = (
									165,
								);
								PBXSmartGroupTreeModuleColumnsKey_v4 = (
									MainColumn,
								);
							};
							PBXSmartGroupTreeModuleOutlineStateKey_v7 = {
								PBXSmartGroupTreeModuleOutlineStateExpansionKey = (
									1C37FBAC04509CD000000102,
									4E45F9A9070DDB1D001B6525,
									4E45F9CE070DDDB2001B6525,
									1C37FAAC04509CD000000102,
								);
								PBXSmartGroupTreeModuleOutlineStateSelectionKey = (
									(
										10,
										9,
									),
								);
								PBXSmartGroupTreeModuleOutlineStateVisibleRectKey = "{{0, 0}, {165, 761}}";
							};
							PBXTopSmartGroupGIDs = (
							);
						};
					};
				},
			);
			"PBXWorkspaceContents:PBXConfiguration.PBXModule.PBXBuildResultsModule" = {
			};
			"PBXWorkspaceContents:PBXConfiguration.PBXModule.PBXDebugCLIModule" = {
			};
			"PBXWorkspaceContents:PBXConfiguration.PBXModule.PBXNavigatorGroup" = {
				PBXSplitModuleInNavigatorKey = {
					SplitCount = 1;
				};
			};
			"PBXWorkspaceContents:PBXConfiguration.PBXModule.PBXProjectWorkspaceModule" = {
				PBXProjectWorkspaceModule_StateKey_Rev39 = {
					PBXProjectWorkspaceModule_DataSourceSelectionKey_Rev6 = {
						BoundsStr = "{{0, 0}, {1083, 762}}";
						Rows = (
							0,
						);
						VisibleRectStr = "{{0, 0}, {1083, 762}}";
					};
					PBXProjectWorkspaceModule_EditorOpen = false;
					PBXProjectWorkspaceModule_EmbeddedNavigatorGroup = {
						PBXSplitModuleInNavigatorKey = {
							SplitCount = 1;
						};
					};
					PBXProjectWorkspaceModule_GeometryKey_Rev15 = {
						PBXProjectWorkspaceModule_SGTM_Geometry = {
							_collapsingFrameDimension = 0;
							_indexOfCollapsedView = 0;
							_percentageOfCollapsedView = 0;
							sizes = (
								"{{0, 0}, {182, 779}}",
								"{{182, 0}, {1098, 779}}",
							);
						};
					};
					PBXProjectWorkspaceModule_OldDetailFrame = "{{0, 0}, {1098, 779}}";
					PBXProjectWorkspaceModule_OldEditorFrame = "{{0, 0}, {750, 480}}";
					PBXProjectWorkspaceModule_OldSuperviewFrame = "{{182, 0}, {1098, 779}}";
					PBXProjectWorkspaceModule_SGTM = {
						PBXBottomSmartGroupGIDs = (
							1C37FBAC04509CD000000102,
							1C37FAAC04509CD000000102,
							1C08E77C0454961000C914BD,
							1CC0EA4004350EF90044410B,
							1CC0EA4004350EF90041110B,
							1C37FABC05509CD000000102,
							1C37FABC05539CD112110102,
							E2644B35053B69B200211256,
							1C37FABC04509CD000100104,
						);
						PBXSmartGroupTreeModuleColumnData = {
							PBXSmartGroupTreeModuleColumnWidthsKey = (
								165,
							);
							PBXSmartGroupTreeModuleColumnsKey_v4 = (
								MainColumn,
							);
						};
						PBXSmartGroupTreeModuleOutlineStateKey_v7 = {
							PBXSmartGroupTreeModuleOutlineStateExpansionKey = (
							);
							PBXSmartGroupTreeModuleOutlineStateSelectionKey = (
								(
									0,
								),
							);
							PBXSmartGroupTreeModuleOutlineStateVisibleRectKey = "{{0, 0}, {165, 761}}";
						};
						PBXTopSmartGroupGIDs = (
						);
					};
				};
			};
			PBXWorkspaceGeometries = (
				{
					Frame = "{{0, 0}, {1280, 779}}";
					PBXProjectWorkspaceModule_GeometryKey_Rev15 = {
					};
					RubberWindowFrame = "0 117 1280 821 0 0 1280 938 ";
				},
			);
			"PBXWorkspaceGeometries:PBXConfiguration.PBXModule.PBXBuildResultsModule" = {
				Frame = "{{0, 0}, {480, 217}}";
				PBXModuleWindowStatusBarHidden = YES;
				RubberWindowFrame = "400 560 480 238 0 0 1280 938 ";
			};
			"PBXWorkspaceGeometries:PBXConfiguration.PBXModule.PBXDebugCLIModule" = {
				Frame = "{{0, 0}, {400, 201}}";
				PBXModuleWindowStatusBarHidden = YES;
				RubberWindowFrame = "50 910 400 222 0 0 1280 938 ";
			};
			"PBXWorkspaceGeometries:PBXConfiguration.PBXModule.PBXNavigatorGroup" = {
				Frame = "{{0, 0}, {750, 481}}";
				PBXModuleWindowStatusBarHidden = YES;
				RubberWindowFrame = "38 410 750 502 0 0 1280 938 ";
			};
			"PBXWorkspaceGeometries:PBXConfiguration.PBXModule.PBXProjectWorkspaceModule" = {
				Frame = "{{0, 0}, {1280, 779}}";
				PBXProjectWorkspaceModule_GeometryKey_Rev15 = {
				};
				RubberWindowFrame = "0 117 1280 821 0 0 1280 938 ";
			};
			PBXWorkspaceStateSaveDate = 138050858;
		};
		perUserProjectItems = {
			4E293175082DF27B004AD73C = 4E293175082DF27B004AD73C;
			4E293288082E50BD004AD73C = 4E293288082E50BD004AD73C;
			4E29328C082E50BD004AD73C = 4E29328C082E50BD004AD73C;
			4E29328E082E50BD004AD73C = 4E29328E082E50BD004AD73C;
			4E293291082E50BD004AD73C = 4E293291082E50BD004AD73C;
			4E2932B3082E5ABD004AD73C = 4E2932B3082E5ABD004AD73C;
			4E2932F5082E639A004AD73C = 4E2932F5082E639A004AD73C;
			4E29332B082E67D9004AD73C = 4E29332B082E67D9004AD73C;
			4E3460AA083A180200AFA1E8 = 4E3460AA083A180200AFA1E8;
			4E3460C4083A1BB400AFA1E8 = 4E3460C4083A1BB400AFA1E8;
			4E3460D3083A211500AFA1E8 = 4E3460D3083A211500AFA1E8;
			4E5470A80832A04100CA0375 = 4E5470A80832A04100CA0375;
			4E5470EE0832A36D00CA0375 = 4E5470EE0832A36D00CA0375;
			4E5471050832A94F00CA0375 = 4E5471050832A94F00CA0375;
			4E5471090832A94F00CA0375 = 4E5471090832A94F00CA0375;
			4E5471280832AB8400CA0375 = 4E5471280832AB8400CA0375;
			4E6A5CA0082EA09E00ED6FD8 = 4E6A5CA0082EA09E00ED6FD8;
			4E6A5CA3082EA09E00ED6FD8 = 4E6A5CA3082EA09E00ED6FD8;
			4E6A5CA5082EA12700ED6FD8 = 4E6A5CA5082EA12700ED6FD8;
			4E6A5CA8082EA12700ED6FD8 = 4E6A5CA8082EA12700ED6FD8;
			4E6A5CBD082EA20000ED6FD8 = 4E6A5CBD082EA20000ED6FD8;
			4E6A5CC3082EA20000ED6FD8 = 4E6A5CC3082EA20000ED6FD8;
			4E6A5D13082EA99E00ED6FD8 = 4E6A5D13082EA99E00ED6FD8;
			4E6A5D1D082EAA9E00ED6FD8 = 4E6A5D1D082EAA9E00ED6FD8;
			4E6F4839082D024B007CC678 = 4E6F4839082D024B007CC678;
			4E71467507D244A8002513CA = 4E71467507D244A8002513CA;
			4E751588082C0D65002018A8 = 4E751588082C0D65002018A8;
			4E8A26AA0838C11700216481 = 4E8A26AA0838C11700216481;
			4E8A26AB0838C11700216481 = 4E8A26AB0838C11700216481;
			4E8A27190838CCE000216481 = 4E8A27190838CCE000216481;
			4E8A271D0838CCE000216481 = 4E8A271D0838CCE000216481;
			4E8A271E0838CCE000216481 = 4E8A271E0838CCE000216481;
			4E8A271F0838CCE000216481 = 4E8A271F0838CCE000216481;
			4E8A275A0838E1AC00216481 = 4E8A275A0838E1AC00216481;
			4E8A275B0838E1AC00216481 = 4E8A275B0838E1AC00216481;
			4E8A27600838E1FB00216481 = 4E8A27600838E1FB00216481;
			4E8A27670838E2CF00216481 = 4E8A27670838E2CF00216481;
			4EAD66DF083A816700C61F13 = 4EAD66DF083A816700C61F13;
			4EAD66E6083A839A00C61F13 = 4EAD66E6083A839A00C61F13;
			4EAD66E8083A839A00C61F13 = 4EAD66E8083A839A00C61F13;
			4EAD6703083A846800C61F13 = 4EAD6703083A846800C61F13;
			4EAD6705083A846800C61F13 = 4EAD6705083A846800C61F13;
			4EAD6706083A846800C61F13 = 4EAD6706083A846800C61F13;
			4EAD6707083A846800C61F13 = 4EAD6707083A846800C61F13;
			4EAD6708083A846800C61F13 = 4EAD6708083A846800C61F13;
			4EAD6726083A854900C61F13 = 4EAD6726083A854900C61F13;
			4EAD6749083A879B00C61F13 = 4EAD6749083A879B00C61F13;
			4EAD675A083A883700C61F13 = 4EAD675A083A883700C61F13;
			4EAD678A083A908800C61F13 = 4EAD678A083A908800C61F13;
			4EAD6791083A911700C61F13 = 4EAD6791083A911700C61F13;
			4EAD6792083A911700C61F13 = 4EAD6792083A911700C61F13;
			4EAD6796083A913A00C61F13 = 4EAD6796083A913A00C61F13;
			4EAD67AF083A92C400C61F13 = 4EAD67AF083A92C400C61F13;
			4EAD67B4083A934800C61F13 = 4EAD67B4083A934800C61F13;
			4EAD67C1083A9CFA00C61F13 = 4EAD67C1083A9CFA00C61F13;
			4EAD67C2083A9CFA00C61F13 = 4EAD67C2083A9CFA00C61F13;
			4EAD67C4083A9CFA00C61F13 = 4EAD67C4083A9CFA00C61F13;
			4EAD67C5083A9CFA00C61F13 = 4EAD67C5083A9CFA00C61F13;
			4EAD67CE083A9E4100C61F13 = 4EAD67CE083A9E4100C61F13;
			4EAD67CF083A9E4100C61F13 = 4EAD67CF083A9E4100C61F13;
			4EAD67D0083A9E4100C61F13 = 4EAD67D0083A9E4100C61F13;
			4EAD67D1083A9E4100C61F13 = 4EAD67D1083A9E4100C61F13;
			4EAD67D2083A9E4100C61F13 = 4EAD67D2083A9E4100C61F13;
			4EAD67D3083A9E4100C61F13 = 4EAD67D3083A9E4100C61F13;
			4EAD67D4083A9E4100C61F13 = 4EAD67D4083A9E4100C61F13;
			4EAD67D5083A9E4100C61F13 = 4EAD67D5083A9E4100C61F13;
			4EAD67F3083B449C00C61F13 = 4EAD67F3083B449C00C61F13;
			4EAD67F4083B449C00C61F13 = 4EAD67F4083B449C00C61F13;
			4EAD67F5083B449C00C61F13 = 4EAD67F5083B449C00C61F13;
			4EAD67F6083B449C00C61F13 = 4EAD67F6083B449C00C61F13;
			4EAD67F7083B449C00C61F13 = 4EAD67F7083B449C00C61F13;
			4EAD67F8083B449C00C61F13 = 4EAD67F8083B449C00C61F13;
			4EAD67F9083B449C00C61F13 = 4EAD67F9083B449C00C61F13;
			4EAD67FA083B449C00C61F13 = 4EAD67FA083B449C00C61F13;
			4EAD6800083B44CA00C61F13 = 4EAD6800083B44CA00C61F13;
			4EAD680F083B6A5200C61F13 = 4EAD680F083B6A5200C61F13;
			4EAD6816083B748600C61F13 = 4EAD6816083B748600C61F13;
			4EAD6867083BB4D200C61F13 = 4EAD6867083BB4D200C61F13;
			4EAD6868083BB4D200C61F13 = 4EAD6868083BB4D200C61F13;
			4EAD6869083BB4D200C61F13 = 4EAD6869083BB4D200C61F13;
			4EAD6877083BBB3A00C61F13 = 4EAD6877083BBB3A00C61F13;
			4EAD687C083BBB3A00C61F13 = 4EAD687C083BBB3A00C61F13;
			4EAD687D083BBB3A00C61F13 = 4EAD687D083BBB3A00C61F13;
			4EAD687E083BBB3A00C61F13 = 4EAD687E083BBB3A00C61F13;
			4EAD687F083BBB3A00C61F13 = 4EAD687F083BBB3A00C61F13;
			4EAD6887083BC07700C61F13 = 4EAD6887083BC07700C61F13;
			4EAD6888083BC07700C61F13 = 4EAD6888083BC07700C61F13;
			4EAD6889083BC07700C61F13 = 4EAD6889083BC07700C61F13;
			4EAD688A083BC07700C61F13 = 4EAD688A083BC07700C61F13;
			4EAD688B083BC07700C61F13 = 4EAD688B083BC07700C61F13;
			4EAD689E083BC40000C61F13 = 4EAD689E083BC40000C61F13;
			4EAD68A1083BC40000C61F13 = 4EAD68A1083BC40000C61F13;
			4EAD68A2083BC40000C61F13 = 4EAD68A2083BC40000C61F13;
			4EAD68A3083BC40000C61F13 = 4EAD68A3083BC40000C61F13;
			4EAD68A9083BC44900C61F13 = 4EAD68A9083BC44900C61F13;
			4EAD68AD083BC47500C61F13 = 4EAD68AD083BC47500C61F13;
			4EAD68AF083BC47500C61F13 = 4EAD68AF083BC47500C61F13;
			4EAD68B8083BC4A800C61F13 = 4EAD68B8083BC4A800C61F13;
			4EAD68BF083BC4E100C61F13 = 4EAD68BF083BC4E100C61F13;
			4EAD68CA083BC5A900C61F13 = 4EAD68CA083BC5A900C61F13;
			4EAD68CD083BC5A900C61F13 = 4EAD68CD083BC5A900C61F13;
			4EAD68CE083BC5A900C61F13 = 4EAD68CE083BC5A900C61F13;
			4EAD68D7083BC5F500C61F13 = 4EAD68D7083BC5F500C61F13;
			4EAD68D9083BC5F500C61F13 = 4EAD68D9083BC5F500C61F13;
			4EAD68E5083BC67200C61F13 = 4EAD68E5083BC67200C61F13;
			4EAD68E9083BC6FC00C61F13 = 4EAD68E9083BC6FC00C61F13;
			4EAD68EC083BC6FC00C61F13 = 4EAD68EC083BC6FC00C61F13;
			4EAD68ED083BC6FC00C61F13 = 4EAD68ED083BC6FC00C61F13;
			4EAD68F0083BC6FC00C61F13 = 4EAD68F0083BC6FC00C61F13;
			4EAD68F1083BC6FC00C61F13 = 4EAD68F1083BC6FC00C61F13;
			4EAD68F2083BC6FC00C61F13 = 4EAD68F2083BC6FC00C61F13;
			4EAD68F3083BC6FC00C61F13 = 4EAD68F3083BC6FC00C61F13;
			4EAD68F4083BC6FC00C61F13 = 4EAD68F4083BC6FC00C61F13;
			4EAD68F5083BC6FC00C61F13 = 4EAD68F5083BC6FC00C61F13;
			4EAD68F6083BC6FC00C61F13 = 4EAD68F6083BC6FC00C61F13;
			4EAD68F7083BC6FC00C61F13 = 4EAD68F7083BC6FC00C61F13;
			4EAD68F8083BC6FC00C61F13 = 4EAD68F8083BC6FC00C61F13;
			4EAD68F9083BC6FC00C61F13 = 4EAD68F9083BC6FC00C61F13;
			4EAD68FA083BC6FC00C61F13 = 4EAD68FA083BC6FC00C61F13;
			4EAD68FB083BC6FC00C61F13 = 4EAD68FB083BC6FC00C61F13;
			4EAD68FF083BC73000C61F13 = 4EAD68FF083BC73000C61F13;
			4EAD6901083BC73000C61F13 = 4EAD6901083BC73000C61F13;
			4EAD6908083BC7E000C61F13 = 4EAD6908083BC7E000C61F13;
			4EAD6909083BC7E000C61F13 = 4EAD6909083BC7E000C61F13;
			4EAD690A083BC7E000C61F13 = 4EAD690A083BC7E000C61F13;
			4EAD690B083BC7E000C61F13 = 4EAD690B083BC7E000C61F13;
			4EAD690C083BC7E000C61F13 = 4EAD690C083BC7E000C61F13;
			4EAD690D083BC7E000C61F13 = 4EAD690D083BC7E000C61F13;
			4EAD690E083BC7E000C61F13 = 4EAD690E083BC7E000C61F13;
			4EAD690F083BC7E000C61F13 = 4EAD690F083BC7E000C61F13;
			4EAD6913083BC8A700C61F13 = 4EAD6913083BC8A700C61F13;
			4EAD6914083BC8A700C61F13 = 4EAD6914083BC8A700C61F13;
			4EAD6954083BD14300C61F13 = 4EAD6954083BD14300C61F13;
			4EAD6969083BD39C00C61F13 = 4EAD6969083BD39C00C61F13;
			4EAD696A083BD39C00C61F13 = 4EAD696A083BD39C00C61F13;
			4EAD6978083BD73400C61F13 = 4EAD6978083BD73400C61F13;
			4EAD6979083BD73400C61F13 = 4EAD6979083BD73400C61F13;
			4EAD697B083BD73400C61F13 = 4EAD697B083BD73400C61F13;
			4EAD698A083BDD2000C61F13 = 4EAD698A083BDD2000C61F13;
			4EAD698D083BDD2000C61F13 = 4EAD698D083BDD2000C61F13;
			4EAD698E083BDD2000C61F13 = 4EAD698E083BDD2000C61F13;
			4EAD699D083BE07200C61F13 = 4EAD699D083BE07200C61F13;
			4EAD699E083BE07200C61F13 = 4EAD699E083BE07200C61F13;
			4EAD69A3083BE08000C61F13 = 4EAD69A3083BE08000C61F13;
			4EAD69A5083BE08000C61F13 = 4EAD69A5083BE08000C61F13;
			4EAD69B6083BE11400C61F13 = 4EAD69B6083BE11400C61F13;
			4EAD69BB083BE16100C61F13 = 4EAD69BB083BE16100C61F13;
			4EAD69BC083BE16100C61F13 = 4EAD69BC083BE16100C61F13;
			4EAD69C0083BE6C300C61F13 = 4EAD69C0083BE6C300C61F13;
			4EAD69CB083BE6CE00C61F13 = 4EAD69CB083BE6CE00C61F13;
			4EAD69DA083BF72A00C61F13 = 4EAD69DA083BF72A00C61F13;
			4EAD69DB083BF72A00C61F13 = 4EAD69DB083BF72A00C61F13;
			4EAD69E2083BF94200C61F13 = 4EAD69E2083BF94200C61F13;
			4EAD69E5083BF94200C61F13 = 4EAD69E5083BF94200C61F13;
			4EAD69EE083BFCC000C61F13 = 4EAD69EE083BFCC000C61F13;
			4EAD69EF083BFCC000C61F13 = 4EAD69EF083BFCC000C61F13;
			4EAD6A05083C003E00C61F13 = 4EAD6A05083C003E00C61F13;
			4EAD6A06083C003E00C61F13 = 4EAD6A06083C003E00C61F13;
			4EAD6A07083C003E00C61F13 = 4EAD6A07083C003E00C61F13;
			4EB6E460082FF18D003AAA48 = 4EB6E460082FF18D003AAA48;
			4EB6E463082FF18D003AAA48 = 4EB6E463082FF18D003AAA48;
			4EB6E510083143AE003AAA48 = 4EB6E510083143AE003AAA48;
			4ECA774C08322F6D008ADA24 = 4ECA774C08322F6D008ADA24;
			4ECA77C3083241C4008ADA24 = 4ECA77C3083241C4008ADA24;
			4ECC02D007E2065C007D664C = 4ECC02D007E2065C007D664C;
			4ED2B5AF07E0E2FC00B9AA22 = 4ED2B5AF07E0E2FC00B9AA22;
			4EDEC4EB07CE349A00514E5A = 4EDEC4EB07CE349A00514E5A;
		};
		sourceControlManager = 4E25C4AB070DDADD0005BF02;
		userBuildSettings = {
		};
	};
	4E02C48E082F816D00EC0863 = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 2415}}";
			sepNavSelRange = "{1427, 0}";
			sepNavVisRect = "{{0, 1104}, {898, 576}}";
		};
	};
	4E0887C1071585CD005706CD = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {943, 437}}";
			sepNavSelRange = "{0, 0}";
			sepNavVisRect = "{{0, 0}, {943, 437}}";
		};
	};
	4E13CA0B07EB1770003D3B6C = {
		isa = PBXFileReference;
		lastKnownFileType = sourcecode.c.h;
		name = fftw3.h;
		path = /sw/include/fftw3.h;
		refType = 0;
		sourceTree = "<absolute>";
	};
	4E25C4AB070DDADD0005BF02 = {
		fallbackIsa = XCSourceControlManager;
		isSCMEnabled = 0;
		isa = PBXSourceControlManager;
		scmConfiguration = {
		};
		scmType = scm.subversion;
	};
	4E25C4AC070DDADD0005BF02 = {
		indexTemplatePath = "";
		isa = PBXCodeSenseManager;
		usesDefaults = 1;
		wantsCodeCompletion = 1;
		wantsCodeCompletionAutoSuggestions = 0;
		wantsCodeCompletionCaseSensitivity = 1;
		wantsCodeCompletionListAlways = 1;
		wantsCodeCompletionOnlyMatchingItems = 1;
		wantsCodeCompletionParametersIncluded = 1;
		wantsCodeCompletionPlaceholdersInserted = 1;
		wantsCodeCompletionTabCompletes = 1;
		wantsIndex = 1;
	};
	4E293175082DF27B004AD73C = {
		fRef = 4E751580082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.c: 347";
		rLen = 0;
		rLoc = 13340;
		rType = 0;
		vrLen = 797;
		vrLoc = 11213;
	};
	4E293281082E501F004AD73C = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {943, 576}}";
			sepNavSelRange = "{40, 0}";
			sepNavVisRect = "{{0, 0}, {943, 576}}";
		};
	};
	4E293282082E501F004AD73C = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {766, 8671}}";
			sepNavSelRange = "{4388, 0}";
			sepNavVisRect = "{{0, 1933}, {766, 406}}";
		};
	};
	4E293288082E50BD004AD73C = {
		fRef = 4E6E40C2082CB46F00642FF0;
		isa = PBXTextBookmark;
		name = "/** inverse nfft \n * -----------------------------------------------------------------------------\n * -----------------------------------------------------------------------------\n */\nvoid infft_init_specific(infft_plan *this_iplan, nfft_plan *direct_plan,\n\t\t\t int infft_flags)\n{\n  this_iplan->direct_plan = direct_plan;\n  this_iplan->infft_flags = infft_flags;\n  \n  this_iplan->given_f = (fftw_complex*)\n    fftw_malloc(this_iplan->direct_plan->M*sizeof(fftw_complex));\n\n  this_iplan->r_iter = (fftw_complex*)\n    fftw_malloc(this_iplan->direct_plan->M*sizeof(fftw_complex));\n\n  this_iplan->f_hat_iter = (fftw_complex*)\n    fftw_malloc(this_iplan->direct_plan->N_L*sizeof(fftw_complex));\n\n  this_iplan->p_hat_iter = (fftw_complex*)\n    fftw_malloc(this_iplan->direct_plan->N_L*sizeof(fftw_complex));\n\n  if(this_iplan->infft_flags & LANDWEBER)\n    {\n      this_iplan->z_hat_iter = this_iplan->p_hat_iter;\n    }\n\n  if(this_iplan->infft_flags & STEEPEST_DESCENT)\n    {\n      this_iplan->z_hat_iter = this_iplan->p_hat_iter;\n\n      this_iplan->v_iter = (fftw_complex*)\n\tfftw_malloc(this_iplan->direct_plan->M*sizeof(fftw_complex));\n    }\n\n  if(this_iplan->infft_flags & CGNR_E)\n    {\n      this_iplan->z_hat_iter = (fftw_complex*)\n\tfftw_malloc(this_iplan->direct_plan->N_L*sizeof(fftw_complex));\n\n      this_iplan->v_iter = (fftw_complex*)\n\tfftw_malloc(this_iplan->direct_plan->M*sizeof(fftw_complex));\n    }\n\n  if(this_iplan->infft_flags & CGNE_R)\n    {\n      this_iplan->z_hat_iter = this_iplan->p_hat_iter;\n    }\n\n  if(this_iplan->infft_flags & ITERATE_2nd)\n    this_iplan->f_hat_iter_2nd = (fftw_complex*) \n      fftw_malloc(this_iplan->direct_plan->N_L*sizeof(fftw_complex));\n\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    this_iplan->w = \n      (double*) fftw_malloc(this_iplan->direct_plan->M*sizeof(double));\n  \n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    this_iplan->w_hat = \n      (double*) fftw_malloc(this_iplan->direct_plan->N_L*sizeof(double));\n}\n\nvoid infft_init(infft_plan *this_iplan, nfft_plan *direct_plan)\n{\n  infft_init_specific(this_iplan, direct_plan, CGNR_E);\n}\n\nvoid infft_before_loop_help(infft_plan *this_iplan)\n{\n  /** step 2\n   *  overwrites this_iplan->direct_plan->f_hat \n   *  overwrites this_iplan->r_iter\n   */\n  copyc(this_iplan->direct_plan->f_hat, this_iplan->f_hat_iter,\n\tthis_iplan->direct_plan->N_L);\n  \n  SWAPC(this_iplan->r_iter, this_iplan->direct_plan->f);\n  nfft_trafo(this_iplan->direct_plan);\n  SWAPC(this_iplan->r_iter, this_iplan->direct_plan->f);\n\n  updatec_axpy(this_iplan->r_iter, -1.0, this_iplan->given_f,\n\t       this_iplan->direct_plan->M);\n\n  if((!(this_iplan->infft_flags & LANDWEBER)) ||\n     (this_iplan->infft_flags & NORMS_FOR_LANDWEBER))\n    {\n      if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n\tthis_iplan->dot_r_iter =\n\t  dotproductc_w(this_iplan->r_iter, this_iplan->w,\n\t\t\tthis_iplan->direct_plan->M);\n      else\n\tthis_iplan->dot_r_iter =\n\t  dotproductc(this_iplan->r_iter, this_iplan->direct_plan->M);\n    }\n  \n  /** step 3\n   *  overwrites this_iplan->direct_plan->f\n   *  overwrites this_iplan->z_hat_iter resp. this_iplan->z_hat_iter\n   */ \n\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    copyc_w(this_iplan->direct_plan->f, this_iplan->w, this_iplan->r_iter,\n\t    this_iplan->direct_plan->M);\n  else\n    copyc(this_iplan->direct_plan->f, this_iplan->r_iter,\n\t  this_iplan->direct_plan->M);\n  \n  SWAPC(this_iplan->z_hat_iter, this_iplan->direct_plan->f_hat);\n  nfft_adjoint(this_iplan->direct_plan);\n  SWAPC(this_iplan->z_hat_iter, this_iplan->direct_plan->f_hat);\n  \n  if((!(this_iplan->infft_flags & LANDWEBER)) ||\n     (this_iplan->infft_flags & NORMS_FOR_LANDWEBER))\n    {\n      if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n\tthis_iplan->dot_z_hat_iter = \n\t  dotproductc_w(this_iplan->z_hat_iter, this_iplan->w_hat,\n\t\t\tthis_iplan->direct_plan->N_L);\n      else\n\tthis_iplan->dot_z_hat_iter =\n\t  dotproductc(this_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n    }\n\n  if(this_iplan->infft_flags & CGNE_R)\n    this_iplan->dot_p_hat_iter = this_iplan->dot_z_hat_iter;\n\n} /* void infft_before_loop_help */\n\nvoid infft_before_loop(infft_plan *this_iplan)\n{\n  infft_before_loop_help(this_iplan);\n\n  if(this_iplan->infft_flags & CGNR_E)\n    {\n      /** step 4-6\n       *  overwrites this_iplan->f_hat_iter_2nd\n       */\n      if(this_iplan->infft_flags & ITERATE_2nd)\n\tcopyc(this_iplan->f_hat_iter_2nd, this_iplan->f_hat_iter,\n\t      this_iplan->direct_plan->N_L);\n     \n      /** step 7\n       *  overwrites this_iplan->p_hat_iter\n       */\n      copyc(this_iplan->p_hat_iter, this_iplan->z_hat_iter,\n\t    this_iplan->direct_plan->N_L);\n    }\n\n  if(this_iplan->infft_flags & CGNE_R)\n    {\n      /** step 4-7\n       *  overwrites this_iplan->f_hat_iter_2nd\n       */\n      if(this_iplan->infft_flags & ITERATE_2nd)\n\t{\n\t  this_iplan->gamma_iter=1.0;\n\t  copyc(this_iplan->f_hat_iter_2nd, this_iplan->f_hat_iter,\n\t\tthis_iplan->direct_plan->N_L);\n\t}\n    }\n} /* void infft_before_loop */\n\nvoid infft_loop_one_step_landweber(infft_plan *this_iplan)\n{\n  /** step 5\n   *  updates this_iplan->f_hat_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    updatec_xpawy(this_iplan->f_hat_iter, this_iplan->alpha_iter,\n\t\t  this_iplan->w_hat, this_iplan->z_hat_iter,\n\t\t  this_iplan->direct_plan->N_L);\n  else\n    updatec_xpay(this_iplan->f_hat_iter, this_iplan->alpha_iter,\n\t\tthis_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n  \n  /** step 6\n   *  original residual, not the updated residual,\n   *  overwrites this_iplan->r_iter\n   *  overwrites this_iplan->direct_plan->f_hat \n   */\n  copyc(this_iplan->direct_plan->f_hat, this_iplan->f_hat_iter,\n\tthis_iplan->direct_plan->N_L);\n\n  SWAPC(this_iplan->r_iter,this_iplan->direct_plan->f);\n  nfft_trafo(this_iplan->direct_plan);\n  SWAPC(this_iplan->r_iter,this_iplan->direct_plan->f);\n  \n  updatec_axpy(this_iplan->r_iter, -1.0, this_iplan->given_f, \n\t       this_iplan->direct_plan->M);\n\n  if(this_iplan->infft_flags & NORMS_FOR_LANDWEBER)\n    {\n      if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n\tthis_iplan->dot_r_iter = dotproductc_w(this_iplan->r_iter,this_iplan->w,\n\t\t\t\t\t       this_iplan->direct_plan->M);\n      else\n\tthis_iplan->dot_r_iter =\n\t  dotproductc(this_iplan->r_iter, this_iplan->direct_plan->M);\n    }\n\n  /** step 7\n   *  overwrites this_iplan->direct_plan->f \n   *  overwrites this_iplan->z_hat_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    copyc_w(this_iplan->direct_plan->f, this_iplan->w,\n\t    this_iplan->r_iter, this_iplan->direct_plan->M);\n  else\n    copyc(this_iplan->direct_plan->f, this_iplan->r_iter,\n\t  this_iplan->direct_plan->M);\n    \n  SWAPC(this_iplan->z_hat_iter,this_iplan->direct_plan->f_hat);\n  nfft_adjoint(this_iplan->direct_plan);\n  SWAPC(this_iplan->z_hat_iter,this_iplan->direct_plan->f_hat);\n\n  if(this_iplan->infft_flags & NORMS_FOR_LANDWEBER)\n    {\n      if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n\tthis_iplan->dot_z_hat_iter = \n\t  dotproductc_w(this_iplan->z_hat_iter, this_iplan->w_hat,\n\t\t\tthis_iplan->direct_plan->N_L);\n      else\n\tthis_iplan->dot_z_hat_iter =\n\t  dotproductc(this_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n    }\n} /* void infft_loop_one_step_landweber */\n\nvoid infft_loop_one_step_steepest_descent(infft_plan *this_iplan)\n{\n  /** step 5\n   *  overwrites this_iplan->direct_plan->f_hat \n   *  overwrites this_iplan->v_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    copyc_w(this_iplan->direct_plan->f_hat, this_iplan->w_hat,\n\t    this_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n  else\n    copyc(this_iplan->direct_plan->f_hat, this_iplan->z_hat_iter,\n\t  this_iplan->direct_plan->N_L);\n  \n  SWAPC(this_iplan->v_iter,this_iplan->direct_plan->f);\n  nfft_trafo(this_iplan->direct_plan);\n  SWAPC(this_iplan->v_iter,this_iplan->direct_plan->f);\n  \n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    this_iplan->dot_v_iter = dotproductc_w(this_iplan->v_iter, this_iplan->w,\n\t\t\t\t\t   this_iplan->direct_plan->M);\n  else\n    this_iplan->dot_v_iter =\n      dotproductc(this_iplan->v_iter, this_iplan->direct_plan->M);\n  \n  /** step 6\n   */\n  this_iplan->alpha_iter =\n    this_iplan->dot_z_hat_iter / this_iplan->dot_v_iter;\n\n  /** step 7\n   *  updates this_iplan->f_hat_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    updatec_xpawy(this_iplan->f_hat_iter, this_iplan->alpha_iter,\n\t\t  this_iplan->w_hat,this_iplan->z_hat_iter,\n\t\t  this_iplan->direct_plan->N_L);\n  else\n    updatec_xpay(this_iplan->f_hat_iter, this_iplan->alpha_iter,\n\t\tthis_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n\n  /** step 8\n   *  updates this_iplan->r_iter\n   */\n  updatec_xpay(this_iplan->r_iter, -this_iplan->alpha_iter, this_iplan->v_iter,\n\t      this_iplan->direct_plan->M);\n\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    this_iplan->dot_r_iter = dotproductc_w(this_iplan->r_iter, this_iplan->w,\n\t\t\t\t\t   this_iplan->direct_plan->M);\n  else\n    this_iplan->dot_r_iter =\n      dotproductc(this_iplan->r_iter, this_iplan->direct_plan->M);\n\n  /** step 9\n   *  overwrites this_iplan->direct_plan->f\n   *  overwrites this_iplan->z_hat_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    copyc_w(this_iplan->direct_plan->f, this_iplan->w, this_iplan->r_iter,\n\t    this_iplan->direct_plan->M);\n  else\n    copyc(this_iplan->direct_plan->f, this_iplan->r_iter,\n\t  this_iplan->direct_plan->M);\n  \n  SWAPC(this_iplan->z_hat_iter,this_iplan->direct_plan->f_hat);\n  nfft_adjoint(this_iplan->direct_plan);\n  SWAPC(this_iplan->z_hat_iter,this_iplan->direct_plan->f_hat);\n  \n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    this_iplan->dot_z_hat_iter =\n      dotproductc_w(this_iplan->z_hat_iter, this_iplan->w_hat, \n\t\t    this_iplan->direct_plan->N_L);\n  else\n    this_iplan->dot_z_hat_iter =\n      dotproductc(this_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n} /* void infft_loop_one_step_steepest_descent */\n\nvoid infft_loop_one_step_cgnr_e(infft_plan *this_iplan)\n{\n  /** step 9\n   *  overwrites this_iplan->direct_plan->f_hat \n   *  overwrites this_iplan->v_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    copyc_w(this_iplan->direct_plan->f_hat, this_iplan->w_hat,\n\t    this_iplan->p_hat_iter, this_iplan->direct_plan->N_L);\n  else\n    copyc(this_iplan->direct_plan->f_hat, this_iplan->p_hat_iter,\n\t  this_iplan->direct_plan->N_L);\n  \n  SWAPC(this_iplan->v_iter,this_iplan->direct_plan->f);\n  nfft_trafo(this_iplan->direct_plan);\n  SWAPC(this_iplan->v_iter,this_iplan->direct_plan->f);\n  \n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    this_iplan->dot_v_iter = dotproductc_w(this_iplan->v_iter, this_iplan->w,\n\t\t\t\t\t   this_iplan->direct_plan->M);\n  else\n    this_iplan->dot_v_iter =\n      dotproductc(this_iplan->v_iter, this_iplan->direct_plan->M);\n  \n  /** step 10\n   */\n  this_iplan->alpha_iter =\n    this_iplan->dot_z_hat_iter / this_iplan->dot_v_iter;\n\n  /** step 11\n   *  updates this_iplan->f_hat_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    updatec_xpawy(this_iplan->f_hat_iter, this_iplan->alpha_iter,\n\t\t  this_iplan->w_hat, this_iplan->p_hat_iter,\n\t\t  this_iplan->direct_plan->N_L);\n  else\n    updatec_xpay(this_iplan->f_hat_iter, this_iplan->alpha_iter, \n\t\tthis_iplan->p_hat_iter, this_iplan->direct_plan->N_L);\n\n  /** step 12-15\n   *  updates this_iplan->f_hat_iter_2nd\n   */\n  if(this_iplan->infft_flags & ITERATE_2nd)\n    {\n      this_iplan->alpha_iter_2nd =\n\tthis_iplan->dot_r_iter / this_iplan->dot_z_hat_iter;\n      \n      if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n\tupdatec_xpawy(this_iplan->f_hat_iter_2nd, this_iplan->alpha_iter_2nd,\n\t\t      this_iplan->w_hat, this_iplan->z_hat_iter,\n\t\t      this_iplan->direct_plan->N_L);\n      else\n\tupdatec_xpay(this_iplan->f_hat_iter_2nd, this_iplan->alpha_iter_2nd,\n\t\t    this_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n    }\n  \n  /** step 16\n   *  updates this_iplan->r_iter\n   */\n  updatec_xpay(this_iplan->r_iter, -this_iplan->alpha_iter, this_iplan->v_iter,\n\t      this_iplan->direct_plan->M);\n  \n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    this_iplan->dot_r_iter = dotproductc_w(this_iplan->r_iter, this_iplan->w,\n\t\t\t\t\t   this_iplan->direct_plan->M);\n  else\n    this_iplan->dot_r_iter =\n      dotproductc(this_iplan->r_iter, this_iplan->direct_plan->M);\n\n  /** step 17\n   *  overwrites this_iplan->direct_plan->f\n   *  overwrites this_iplan->direct_plan->r_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    copyc_w(this_iplan->direct_plan->f, this_iplan->w, \n\t    this_iplan->r_iter, this_iplan->direct_plan->M);\n  else\n    copyc(this_iplan->direct_plan->f, this_iplan->r_iter,\n\t  this_iplan->direct_plan->M);\n  \n  SWAPC(this_iplan->z_hat_iter,this_iplan->direct_plan->f_hat);\n  nfft_adjoint(this_iplan->direct_plan);\n  SWAPC(this_iplan->z_hat_iter,this_iplan->direct_plan->f_hat);\n\n  this_iplan->dot_z_hat_iter_old = this_iplan->dot_z_hat_iter;\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    this_iplan->dot_z_hat_iter =\n      dotproductc_w(this_iplan->z_hat_iter, this_iplan->w_hat, \n\t\t    this_iplan->direct_plan->N_L);\n  else\n    this_iplan->dot_z_hat_iter =\n      dotproductc(this_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n  \n  /** step 18\n   */\n  this_iplan->beta_iter =\n    this_iplan->dot_z_hat_iter / this_iplan->dot_z_hat_iter_old;\n  \n  /** step 19\n   *  updates this_iplan->p_hat_iter\n   */\n  updatec_axpy(this_iplan->p_hat_iter, this_iplan->beta_iter, \n\t       this_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n} /* void infft_loop_one_step_cgnr_e */\n\nvoid infft_loop_one_step_cgne_r(infft_plan *this_iplan)\n{\n  /** step 9\n   */\n  this_iplan->alpha_iter =\n    this_iplan->dot_r_iter / this_iplan->dot_p_hat_iter;\n  \n  /** step 10\n   *  updates this_iplan->f_hat_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    updatec_xpawy(this_iplan->f_hat_iter, this_iplan->alpha_iter,\n\t\t  this_iplan->w_hat, this_iplan->p_hat_iter,\n\t\t  this_iplan->direct_plan->N_L);\n  else\n    updatec_xpay(this_iplan->f_hat_iter, this_iplan->alpha_iter,\n\t\tthis_iplan->p_hat_iter, this_iplan->direct_plan->N_L);\n  \n  /** step 11\n   *  overwrites this_iplan->direct_plan->f_hat \n   *  overwrites this_iplan->direct_plan->f\n   *  updates this_iplan->r_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    copyc_w(this_iplan->direct_plan->f_hat, this_iplan->w_hat,\n\t    this_iplan->p_hat_iter, this_iplan->direct_plan->N_L);\n  else\n    copyc(this_iplan->direct_plan->f_hat, this_iplan->p_hat_iter,\n\t  this_iplan->direct_plan->N_L);\n  \n  nfft_trafo(this_iplan->direct_plan);\n\n  updatec_xpay(this_iplan->r_iter, -this_iplan->alpha_iter,\n\t      this_iplan->direct_plan->f, this_iplan->direct_plan->M);\n  \n  this_iplan->dot_r_iter_old = this_iplan->dot_r_iter;\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    this_iplan->dot_r_iter =\n      dotproductc_w(this_iplan->r_iter, this_iplan->w,\n\t\t    this_iplan->direct_plan->M);\n  else\n    this_iplan->dot_r_iter =\n      dotproductc(this_iplan->r_iter, this_iplan->direct_plan->M);\n  \n  /** step 12\n   */\n  this_iplan->beta_iter =\n    this_iplan->dot_r_iter / this_iplan->dot_r_iter_old;\n  \n  /** step 13-16\n   *  updates this_iplan->f_hat_iter_2nd\n   */\n  if(this_iplan->infft_flags & ITERATE_2nd)\n    {\n      this_iplan->gamma_iter_old = this_iplan->gamma_iter;\n      this_iplan->gamma_iter =\n\tthis_iplan->beta_iter * this_iplan->gamma_iter_old + 1;\n      \n      updatec_axpby(this_iplan->f_hat_iter_2nd, \n\t\t    this_iplan->beta_iter * this_iplan->gamma_iter_old / \n\t\t    this_iplan->gamma_iter, this_iplan->f_hat_iter, \n\t\t    1.0 / this_iplan->gamma_iter, this_iplan->direct_plan->N_L);\n    }\n  \n  /** step 16\n   *  overwrites this_iplan->direct_plan->f\n   *  overwrites this_iplan->direct_plan->f_hat\n   *  updates this_iplan->p_hat_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    copyc_w(this_iplan->direct_plan->f, this_iplan->w,\n\t    this_iplan->r_iter, this_iplan->direct_plan->M);\n  else\n    copyc(this_iplan->direct_plan->f, this_iplan->r_iter,\n\t  this_iplan->direct_plan->M); \n  \n  nfft_adjoint(this_iplan->direct_plan);\n  \n  updatec_axpy(this_iplan->p_hat_iter, this_iplan->beta_iter,\n\t       this_iplan->direct_plan->f_hat, this_iplan->direct_plan->N_L);\n  \n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    this_iplan->dot_p_hat_iter = \n      dotproductc_w(this_iplan->p_hat_iter, this_iplan->w_hat,\n\t\t    this_iplan->direct_plan->N_L);\n  else\n    this_iplan->dot_p_hat_iter =\n      dotproductc(this_iplan->p_hat_iter, this_iplan->direct_plan->N_L);\n}\n\nvoid infft_loop_one_step(infft_plan *this_iplan)\n{\n  if(this_iplan->infft_flags & LANDWEBER)\n    infft_loop_one_step_landweber(this_iplan);\n\n  if(this_iplan->infft_flags & STEEPEST_DESCENT)\n    infft_loop_one_step_steepest_descent(this_iplan);\n  \n  if(this_iplan->infft_flags & CGNR_E)\n    infft_loop_one_step_cgnr_e(this_iplan);\n  \n  if(this_iplan->infft_flags & CGNE_R)\n    infft_loop_one_step_cgne_r(this_iplan);\n}\n\nvoid infft_finalize(infft_plan *this_iplan)\n{\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    fftw_free(this_iplan->w);\n  \n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    fftw_free(this_iplan->w_hat);\n  \n  if(this_iplan->infft_flags & ITERATE_2nd)\n    fftw_free(this_iplan->f_hat_iter_2nd);\n  \n  if(this_iplan->infft_flags & CGNR_E)\n    {\n      fftw_free(this_iplan->v_iter);\n      fftw_free(this_iplan->z_hat_iter);\n    }\n  \n  if(this_iplan->infft_flags & STEEPEST_DESCENT)\n    fftw_free(this_iplan->v_iter);\n  \n  fftw_free(this_iplan->p_hat_iter);\n  fftw_free(this_iplan->f_hat_iter);\n\n  fftw_free(this_iplan->r_iter);\n  fftw_free(this_iplan->given_f);\n}\n";
		rLen = 17550;
		rLoc = 35462;
		rType = 0;
		vrLen = 945;
		vrLoc = 52061;
	};
	4E29328C082E50BD004AD73C = {
		fRef = 4E6E40C2082CB46F00642FF0;
		isa = PBXTextBookmark;
		name = "/** inverse nfft \n * -----------------------------------------------------------------------------\n * -----------------------------------------------------------------------------\n */\nvoid infft_init_specific(infft_plan *this_iplan, nfft_plan *direct_plan,\n\t\t\t int infft_flags)\n{\n  this_iplan->direct_plan = direct_plan;\n  this_iplan->infft_flags = infft_flags;\n  \n  this_iplan->given_f = (fftw_complex*)\n    fftw_malloc(this_iplan->direct_plan->M*sizeof(fftw_complex));\n\n  this_iplan->r_iter = (fftw_complex*)\n    fftw_malloc(this_iplan->direct_plan->M*sizeof(fftw_complex));\n\n  this_iplan->f_hat_iter = (fftw_complex*)\n    fftw_malloc(this_iplan->direct_plan->N_L*sizeof(fftw_complex));\n\n  this_iplan->p_hat_iter = (fftw_complex*)\n    fftw_malloc(this_iplan->direct_plan->N_L*sizeof(fftw_complex));\n\n  if(this_iplan->infft_flags & LANDWEBER)\n    {\n      this_iplan->z_hat_iter = this_iplan->p_hat_iter;\n    }\n\n  if(this_iplan->infft_flags & STEEPEST_DESCENT)\n    {\n      this_iplan->z_hat_iter = this_iplan->p_hat_iter;\n\n      this_iplan->v_iter = (fftw_complex*)\n\tfftw_malloc(this_iplan->direct_plan->M*sizeof(fftw_complex));\n    }\n\n  if(this_iplan->infft_flags & CGNR_E)\n    {\n      this_iplan->z_hat_iter = (fftw_complex*)\n\tfftw_malloc(this_iplan->direct_plan->N_L*sizeof(fftw_complex));\n\n      this_iplan->v_iter = (fftw_complex*)\n\tfftw_malloc(this_iplan->direct_plan->M*sizeof(fftw_complex));\n    }\n\n  if(this_iplan->infft_flags & CGNE_R)\n    {\n      this_iplan->z_hat_iter = this_iplan->p_hat_iter;\n    }\n\n  if(this_iplan->infft_flags & ITERATE_2nd)\n    this_iplan->f_hat_iter_2nd = (fftw_complex*) \n      fftw_malloc(this_iplan->direct_plan->N_L*sizeof(fftw_complex));\n\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    this_iplan->w = \n      (double*) fftw_malloc(this_iplan->direct_plan->M*sizeof(double));\n  \n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    this_iplan->w_hat = \n      (double*) fftw_malloc(this_iplan->direct_plan->N_L*sizeof(double));\n}\n\nvoid infft_init(infft_plan *this_iplan, nfft_plan *direct_plan)\n{\n  infft_init_specific(this_iplan, direct_plan, CGNR_E);\n}\n\nvoid infft_before_loop_help(infft_plan *this_iplan)\n{\n  /** step 2\n   *  overwrites this_iplan->direct_plan->f_hat \n   *  overwrites this_iplan->r_iter\n   */\n  copyc(this_iplan->direct_plan->f_hat, this_iplan->f_hat_iter,\n\tthis_iplan->direct_plan->N_L);\n  \n  SWAPC(this_iplan->r_iter, this_iplan->direct_plan->f);\n  nfft_trafo(this_iplan->direct_plan);\n  SWAPC(this_iplan->r_iter, this_iplan->direct_plan->f);\n\n  updatec_axpy(this_iplan->r_iter, -1.0, this_iplan->given_f,\n\t       this_iplan->direct_plan->M);\n\n  if((!(this_iplan->infft_flags & LANDWEBER)) ||\n     (this_iplan->infft_flags & NORMS_FOR_LANDWEBER))\n    {\n      if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n\tthis_iplan->dot_r_iter =\n\t  dotproductc_w(this_iplan->r_iter, this_iplan->w,\n\t\t\tthis_iplan->direct_plan->M);\n      else\n\tthis_iplan->dot_r_iter =\n\t  dotproductc(this_iplan->r_iter, this_iplan->direct_plan->M);\n    }\n  \n  /** step 3\n   *  overwrites this_iplan->direct_plan->f\n   *  overwrites this_iplan->z_hat_iter resp. this_iplan->z_hat_iter\n   */ \n\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    copyc_w(this_iplan->direct_plan->f, this_iplan->w, this_iplan->r_iter,\n\t    this_iplan->direct_plan->M);\n  else\n    copyc(this_iplan->direct_plan->f, this_iplan->r_iter,\n\t  this_iplan->direct_plan->M);\n  \n  SWAPC(this_iplan->z_hat_iter, this_iplan->direct_plan->f_hat);\n  nfft_adjoint(this_iplan->direct_plan);\n  SWAPC(this_iplan->z_hat_iter, this_iplan->direct_plan->f_hat);\n  \n  if((!(this_iplan->infft_flags & LANDWEBER)) ||\n     (this_iplan->infft_flags & NORMS_FOR_LANDWEBER))\n    {\n      if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n\tthis_iplan->dot_z_hat_iter = \n\t  dotproductc_w(this_iplan->z_hat_iter, this_iplan->w_hat,\n\t\t\tthis_iplan->direct_plan->N_L);\n      else\n\tthis_iplan->dot_z_hat_iter =\n\t  dotproductc(this_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n    }\n\n  if(this_iplan->infft_flags & CGNE_R)\n    this_iplan->dot_p_hat_iter = this_iplan->dot_z_hat_iter;\n\n} /* void infft_before_loop_help */\n\nvoid infft_before_loop(infft_plan *this_iplan)\n{\n  infft_before_loop_help(this_iplan);\n\n  if(this_iplan->infft_flags & CGNR_E)\n    {\n      /** step 4-6\n       *  overwrites this_iplan->f_hat_iter_2nd\n       */\n      if(this_iplan->infft_flags & ITERATE_2nd)\n\tcopyc(this_iplan->f_hat_iter_2nd, this_iplan->f_hat_iter,\n\t      this_iplan->direct_plan->N_L);\n     \n      /** step 7\n       *  overwrites this_iplan->p_hat_iter\n       */\n      copyc(this_iplan->p_hat_iter, this_iplan->z_hat_iter,\n\t    this_iplan->direct_plan->N_L);\n    }\n\n  if(this_iplan->infft_flags & CGNE_R)\n    {\n      /** step 4-7\n       *  overwrites this_iplan->f_hat_iter_2nd\n       */\n      if(this_iplan->infft_flags & ITERATE_2nd)\n\t{\n\t  this_iplan->gamma_iter=1.0;\n\t  copyc(this_iplan->f_hat_iter_2nd, this_iplan->f_hat_iter,\n\t\tthis_iplan->direct_plan->N_L);\n\t}\n    }\n} /* void infft_before_loop */\n\nvoid infft_loop_one_step_landweber(infft_plan *this_iplan)\n{\n  /** step 5\n   *  updates this_iplan->f_hat_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    updatec_xpawy(this_iplan->f_hat_iter, this_iplan->alpha_iter,\n\t\t  this_iplan->w_hat, this_iplan->z_hat_iter,\n\t\t  this_iplan->direct_plan->N_L);\n  else\n    updatec_xpay(this_iplan->f_hat_iter, this_iplan->alpha_iter,\n\t\tthis_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n  \n  /** step 6\n   *  original residual, not the updated residual,\n   *  overwrites this_iplan->r_iter\n   *  overwrites this_iplan->direct_plan->f_hat \n   */\n  copyc(this_iplan->direct_plan->f_hat, this_iplan->f_hat_iter,\n\tthis_iplan->direct_plan->N_L);\n\n  SWAPC(this_iplan->r_iter,this_iplan->direct_plan->f);\n  nfft_trafo(this_iplan->direct_plan);\n  SWAPC(this_iplan->r_iter,this_iplan->direct_plan->f);\n  \n  updatec_axpy(this_iplan->r_iter, -1.0, this_iplan->given_f, \n\t       this_iplan->direct_plan->M);\n\n  if(this_iplan->infft_flags & NORMS_FOR_LANDWEBER)\n    {\n      if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n\tthis_iplan->dot_r_iter = dotproductc_w(this_iplan->r_iter,this_iplan->w,\n\t\t\t\t\t       this_iplan->direct_plan->M);\n      else\n\tthis_iplan->dot_r_iter =\n\t  dotproductc(this_iplan->r_iter, this_iplan->direct_plan->M);\n    }\n\n  /** step 7\n   *  overwrites this_iplan->direct_plan->f \n   *  overwrites this_iplan->z_hat_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    copyc_w(this_iplan->direct_plan->f, this_iplan->w,\n\t    this_iplan->r_iter, this_iplan->direct_plan->M);\n  else\n    copyc(this_iplan->direct_plan->f, this_iplan->r_iter,\n\t  this_iplan->direct_plan->M);\n    \n  SWAPC(this_iplan->z_hat_iter,this_iplan->direct_plan->f_hat);\n  nfft_adjoint(this_iplan->direct_plan);\n  SWAPC(this_iplan->z_hat_iter,this_iplan->direct_plan->f_hat);\n\n  if(this_iplan->infft_flags & NORMS_FOR_LANDWEBER)\n    {\n      if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n\tthis_iplan->dot_z_hat_iter = \n\t  dotproductc_w(this_iplan->z_hat_iter, this_iplan->w_hat,\n\t\t\tthis_iplan->direct_plan->N_L);\n      else\n\tthis_iplan->dot_z_hat_iter =\n\t  dotproductc(this_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n    }\n} /* void infft_loop_one_step_landweber */\n\nvoid infft_loop_one_step_steepest_descent(infft_plan *this_iplan)\n{\n  /** step 5\n   *  overwrites this_iplan->direct_plan->f_hat \n   *  overwrites this_iplan->v_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    copyc_w(this_iplan->direct_plan->f_hat, this_iplan->w_hat,\n\t    this_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n  else\n    copyc(this_iplan->direct_plan->f_hat, this_iplan->z_hat_iter,\n\t  this_iplan->direct_plan->N_L);\n  \n  SWAPC(this_iplan->v_iter,this_iplan->direct_plan->f);\n  nfft_trafo(this_iplan->direct_plan);\n  SWAPC(this_iplan->v_iter,this_iplan->direct_plan->f);\n  \n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    this_iplan->dot_v_iter = dotproductc_w(this_iplan->v_iter, this_iplan->w,\n\t\t\t\t\t   this_iplan->direct_plan->M);\n  else\n    this_iplan->dot_v_iter =\n      dotproductc(this_iplan->v_iter, this_iplan->direct_plan->M);\n  \n  /** step 6\n   */\n  this_iplan->alpha_iter =\n    this_iplan->dot_z_hat_iter / this_iplan->dot_v_iter;\n\n  /** step 7\n   *  updates this_iplan->f_hat_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    updatec_xpawy(this_iplan->f_hat_iter, this_iplan->alpha_iter,\n\t\t  this_iplan->w_hat,this_iplan->z_hat_iter,\n\t\t  this_iplan->direct_plan->N_L);\n  else\n    updatec_xpay(this_iplan->f_hat_iter, this_iplan->alpha_iter,\n\t\tthis_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n\n  /** step 8\n   *  updates this_iplan->r_iter\n   */\n  updatec_xpay(this_iplan->r_iter, -this_iplan->alpha_iter, this_iplan->v_iter,\n\t      this_iplan->direct_plan->M);\n\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    this_iplan->dot_r_iter = dotproductc_w(this_iplan->r_iter, this_iplan->w,\n\t\t\t\t\t   this_iplan->direct_plan->M);\n  else\n    this_iplan->dot_r_iter =\n      dotproductc(this_iplan->r_iter, this_iplan->direct_plan->M);\n\n  /** step 9\n   *  overwrites this_iplan->direct_plan->f\n   *  overwrites this_iplan->z_hat_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    copyc_w(this_iplan->direct_plan->f, this_iplan->w, this_iplan->r_iter,\n\t    this_iplan->direct_plan->M);\n  else\n    copyc(this_iplan->direct_plan->f, this_iplan->r_iter,\n\t  this_iplan->direct_plan->M);\n  \n  SWAPC(this_iplan->z_hat_iter,this_iplan->direct_plan->f_hat);\n  nfft_adjoint(this_iplan->direct_plan);\n  SWAPC(this_iplan->z_hat_iter,this_iplan->direct_plan->f_hat);\n  \n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    this_iplan->dot_z_hat_iter =\n      dotproductc_w(this_iplan->z_hat_iter, this_iplan->w_hat, \n\t\t    this_iplan->direct_plan->N_L);\n  else\n    this_iplan->dot_z_hat_iter =\n      dotproductc(this_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n} /* void infft_loop_one_step_steepest_descent */\n\nvoid infft_loop_one_step_cgnr_e(infft_plan *this_iplan)\n{\n  /** step 9\n   *  overwrites this_iplan->direct_plan->f_hat \n   *  overwrites this_iplan->v_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    copyc_w(this_iplan->direct_plan->f_hat, this_iplan->w_hat,\n\t    this_iplan->p_hat_iter, this_iplan->direct_plan->N_L);\n  else\n    copyc(this_iplan->direct_plan->f_hat, this_iplan->p_hat_iter,\n\t  this_iplan->direct_plan->N_L);\n  \n  SWAPC(this_iplan->v_iter,this_iplan->direct_plan->f);\n  nfft_trafo(this_iplan->direct_plan);\n  SWAPC(this_iplan->v_iter,this_iplan->direct_plan->f);\n  \n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    this_iplan->dot_v_iter = dotproductc_w(this_iplan->v_iter, this_iplan->w,\n\t\t\t\t\t   this_iplan->direct_plan->M);\n  else\n    this_iplan->dot_v_iter =\n      dotproductc(this_iplan->v_iter, this_iplan->direct_plan->M);\n  \n  /** step 10\n   */\n  this_iplan->alpha_iter =\n    this_iplan->dot_z_hat_iter / this_iplan->dot_v_iter;\n\n  /** step 11\n   *  updates this_iplan->f_hat_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    updatec_xpawy(this_iplan->f_hat_iter, this_iplan->alpha_iter,\n\t\t  this_iplan->w_hat, this_iplan->p_hat_iter,\n\t\t  this_iplan->direct_plan->N_L);\n  else\n    updatec_xpay(this_iplan->f_hat_iter, this_iplan->alpha_iter, \n\t\tthis_iplan->p_hat_iter, this_iplan->direct_plan->N_L);\n\n  /** step 12-15\n   *  updates this_iplan->f_hat_iter_2nd\n   */\n  if(this_iplan->infft_flags & ITERATE_2nd)\n    {\n      this_iplan->alpha_iter_2nd =\n\tthis_iplan->dot_r_iter / this_iplan->dot_z_hat_iter;\n      \n      if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n\tupdatec_xpawy(this_iplan->f_hat_iter_2nd, this_iplan->alpha_iter_2nd,\n\t\t      this_iplan->w_hat, this_iplan->z_hat_iter,\n\t\t      this_iplan->direct_plan->N_L);\n      else\n\tupdatec_xpay(this_iplan->f_hat_iter_2nd, this_iplan->alpha_iter_2nd,\n\t\t    this_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n    }\n  \n  /** step 16\n   *  updates this_iplan->r_iter\n   */\n  updatec_xpay(this_iplan->r_iter, -this_iplan->alpha_iter, this_iplan->v_iter,\n\t      this_iplan->direct_plan->M);\n  \n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    this_iplan->dot_r_iter = dotproductc_w(this_iplan->r_iter, this_iplan->w,\n\t\t\t\t\t   this_iplan->direct_plan->M);\n  else\n    this_iplan->dot_r_iter =\n      dotproductc(this_iplan->r_iter, this_iplan->direct_plan->M);\n\n  /** step 17\n   *  overwrites this_iplan->direct_plan->f\n   *  overwrites this_iplan->direct_plan->r_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    copyc_w(this_iplan->direct_plan->f, this_iplan->w, \n\t    this_iplan->r_iter, this_iplan->direct_plan->M);\n  else\n    copyc(this_iplan->direct_plan->f, this_iplan->r_iter,\n\t  this_iplan->direct_plan->M);\n  \n  SWAPC(this_iplan->z_hat_iter,this_iplan->direct_plan->f_hat);\n  nfft_adjoint(this_iplan->direct_plan);\n  SWAPC(this_iplan->z_hat_iter,this_iplan->direct_plan->f_hat);\n\n  this_iplan->dot_z_hat_iter_old = this_iplan->dot_z_hat_iter;\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    this_iplan->dot_z_hat_iter =\n      dotproductc_w(this_iplan->z_hat_iter, this_iplan->w_hat, \n\t\t    this_iplan->direct_plan->N_L);\n  else\n    this_iplan->dot_z_hat_iter =\n      dotproductc(this_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n  \n  /** step 18\n   */\n  this_iplan->beta_iter =\n    this_iplan->dot_z_hat_iter / this_iplan->dot_z_hat_iter_old;\n  \n  /** step 19\n   *  updates this_iplan->p_hat_iter\n   */\n  updatec_axpy(this_iplan->p_hat_iter, this_iplan->beta_iter, \n\t       this_iplan->z_hat_iter, this_iplan->direct_plan->N_L);\n} /* void infft_loop_one_step_cgnr_e */\n\nvoid infft_loop_one_step_cgne_r(infft_plan *this_iplan)\n{\n  /** step 9\n   */\n  this_iplan->alpha_iter =\n    this_iplan->dot_r_iter / this_iplan->dot_p_hat_iter;\n  \n  /** step 10\n   *  updates this_iplan->f_hat_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    updatec_xpawy(this_iplan->f_hat_iter, this_iplan->alpha_iter,\n\t\t  this_iplan->w_hat, this_iplan->p_hat_iter,\n\t\t  this_iplan->direct_plan->N_L);\n  else\n    updatec_xpay(this_iplan->f_hat_iter, this_iplan->alpha_iter,\n\t\tthis_iplan->p_hat_iter, this_iplan->direct_plan->N_L);\n  \n  /** step 11\n   *  overwrites this_iplan->direct_plan->f_hat \n   *  overwrites this_iplan->direct_plan->f\n   *  updates this_iplan->r_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    copyc_w(this_iplan->direct_plan->f_hat, this_iplan->w_hat,\n\t    this_iplan->p_hat_iter, this_iplan->direct_plan->N_L);\n  else\n    copyc(this_iplan->direct_plan->f_hat, this_iplan->p_hat_iter,\n\t  this_iplan->direct_plan->N_L);\n  \n  nfft_trafo(this_iplan->direct_plan);\n\n  updatec_xpay(this_iplan->r_iter, -this_iplan->alpha_iter,\n\t      this_iplan->direct_plan->f, this_iplan->direct_plan->M);\n  \n  this_iplan->dot_r_iter_old = this_iplan->dot_r_iter;\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    this_iplan->dot_r_iter =\n      dotproductc_w(this_iplan->r_iter, this_iplan->w,\n\t\t    this_iplan->direct_plan->M);\n  else\n    this_iplan->dot_r_iter =\n      dotproductc(this_iplan->r_iter, this_iplan->direct_plan->M);\n  \n  /** step 12\n   */\n  this_iplan->beta_iter =\n    this_iplan->dot_r_iter / this_iplan->dot_r_iter_old;\n  \n  /** step 13-16\n   *  updates this_iplan->f_hat_iter_2nd\n   */\n  if(this_iplan->infft_flags & ITERATE_2nd)\n    {\n      this_iplan->gamma_iter_old = this_iplan->gamma_iter;\n      this_iplan->gamma_iter =\n\tthis_iplan->beta_iter * this_iplan->gamma_iter_old + 1;\n      \n      updatec_axpby(this_iplan->f_hat_iter_2nd, \n\t\t    this_iplan->beta_iter * this_iplan->gamma_iter_old / \n\t\t    this_iplan->gamma_iter, this_iplan->f_hat_iter, \n\t\t    1.0 / this_iplan->gamma_iter, this_iplan->direct_plan->N_L);\n    }\n  \n  /** step 16\n   *  overwrites this_iplan->direct_plan->f\n   *  overwrites this_iplan->direct_plan->f_hat\n   *  updates this_iplan->p_hat_iter\n   */\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    copyc_w(this_iplan->direct_plan->f, this_iplan->w,\n\t    this_iplan->r_iter, this_iplan->direct_plan->M);\n  else\n    copyc(this_iplan->direct_plan->f, this_iplan->r_iter,\n\t  this_iplan->direct_plan->M); \n  \n  nfft_adjoint(this_iplan->direct_plan);\n  \n  updatec_axpy(this_iplan->p_hat_iter, this_iplan->beta_iter,\n\t       this_iplan->direct_plan->f_hat, this_iplan->direct_plan->N_L);\n  \n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    this_iplan->dot_p_hat_iter = \n      dotproductc_w(this_iplan->p_hat_iter, this_iplan->w_hat,\n\t\t    this_iplan->direct_plan->N_L);\n  else\n    this_iplan->dot_p_hat_iter =\n      dotproductc(this_iplan->p_hat_iter, this_iplan->direct_plan->N_L);\n}\n\nvoid infft_loop_one_step(infft_plan *this_iplan)\n{\n  if(this_iplan->infft_flags & LANDWEBER)\n    infft_loop_one_step_landweber(this_iplan);\n\n  if(this_iplan->infft_flags & STEEPEST_DESCENT)\n    infft_loop_one_step_steepest_descent(this_iplan);\n  \n  if(this_iplan->infft_flags & CGNR_E)\n    infft_loop_one_step_cgnr_e(this_iplan);\n  \n  if(this_iplan->infft_flags & CGNE_R)\n    infft_loop_one_step_cgne_r(this_iplan);\n}\n\nvoid infft_finalize(infft_plan *this_iplan)\n{\n  if(this_iplan->infft_flags & PRECOMPUTE_WEIGHT)\n    fftw_free(this_iplan->w);\n  \n  if(this_iplan->infft_flags & PRECOMPUTE_DAMP)\n    fftw_free(this_iplan->w_hat);\n  \n  if(this_iplan->infft_flags & ITERATE_2nd)\n    fftw_free(this_iplan->f_hat_iter_2nd);\n  \n  if(this_iplan->infft_flags & CGNR_E)\n    {\n      fftw_free(this_iplan->v_iter);\n      fftw_free(this_iplan->z_hat_iter);\n    }\n  \n  if(this_iplan->infft_flags & STEEPEST_DESCENT)\n    fftw_free(this_iplan->v_iter);\n  \n  fftw_free(this_iplan->p_hat_iter);\n  fftw_free(this_iplan->f_hat_iter);\n\n  fftw_free(this_iplan->r_iter);\n  fftw_free(this_iplan->given_f);\n}\n";
		rLen = 17550;
		rLoc = 35462;
		rType = 0;
		vrLen = 945;
		vrLoc = 52061;
	};
	4E29328E082E50BD004AD73C = {
		fRef = 4E293281082E501F004AD73C;
		isa = PBXTextBookmark;
		name = "infsft.h: 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 40;
		vrLoc = 0;
	};
	4E293291082E50BD004AD73C = {
		fRef = 4E293282082E501F004AD73C;
		isa = PBXTextBookmark;
		name = "infsft.c: 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 1200;
		vrLoc = 0;
	};
	4E2932A7082E5984004AD73C = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {766, 1696}}";
			sepNavSelRange = "{247, 0}";
			sepNavVisRect = "{{0, 1290}, {766, 406}}";
		};
	};
	4E2932B3082E5ABD004AD73C = {
		fRef = 4E2932A7082E5984004AD73C;
		isa = PBXTextBookmark;
		name = "template.c: 1";
		rLen = 0;
		rLoc = 2264;
		rType = 0;
		vrLen = 0;
		vrLoc = 0;
	};
	4E2932F5082E639A004AD73C = {
		fRef = 4E6CD54B07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "nfsft.h: 84";
		rLen = 0;
		rLoc = 1727;
		rType = 0;
		vrLen = 624;
		vrLoc = 1079;
	};
	4E29331A082E672F004AD73C = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 3455}}";
			sepNavSelRange = "{4042, 0}";
			sepNavVisRect = "{{0, 2506}, {898, 470}}";
			sepNavWindowFrame = "{{15, 72}, {1280, 861}}";
		};
	};
	4E29332B082E67D9004AD73C = {
		fRef = 4E29331A082E672F004AD73C;
		isa = PBXTextBookmark;
		name = "wrapper.c: 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 1082;
		vrLoc = 0;
	};
	4E3460AA083A180200AFA1E8 = {
		fRef = 4E6CD54A07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "  plan->N = 1<<ngpt(plan->M);\n";
		rLen = 30;
		rLoc = 11833;
		rType = 0;
		vrLen = 653;
		vrLoc = 9498;
	};
	4E3460C4083A1BB400AFA1E8 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 46";
		rLen = 0;
		rLoc = 1579;
		rType = 0;
		vrLen = 602;
		vrLoc = 999;
	};
	4E3460D3083A211500AFA1E8 = {
		fRef = 4E6CD54A07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "nfsft.c: 453";
		rLen = 0;
		rLoc = 9763;
		rType = 0;
		vrLen = 1690;
		vrLoc = 9556;
	};
	4E5470A208329F8600CA0375 = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {986, 3423}}";
			sepNavSelRange = "{0, 0}";
			sepNavVisRect = "{{0, 0}, {898, 576}}";
		};
	};
	4E5470A80832A04100CA0375 = {
		fRef = 4E5470A208329F8600CA0375;
		isa = PBXTextBookmark;
		name = "summation.c: 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 903;
		vrLoc = 0;
	};
	4E5470E10832A31200CA0375 = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {1063, 5215}}";
			sepNavSelRange = "{10142, 0}";
			sepNavVisRect = "{{0, 4624}, {898, 576}}";
		};
	};
	4E5470E20832A31200CA0375 = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 720}}";
			sepNavSelRange = "{1273, 0}";
			sepNavVisRect = "{{0, 112}, {898, 576}}";
		};
	};
	4E5470EE0832A36D00CA0375 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 649;
		vrLoc = 0;
	};
	4E5471050832A94F00CA0375 = {
		fRef = 4E293282082E501F004AD73C;
		isa = PBXTextBookmark;
		name = "infsft.c: 134";
		rLen = 0;
		rLoc = 4388;
		rType = 0;
		vrLen = 758;
		vrLoc = 4028;
	};
	4E5471090832A94F00CA0375 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "void flft(int M, int t, int n, complex *f_hat, struct U_type ***U, \n          struct nfsft_transform_wisdom *tw);\n";
		rLen = 107;
		rLoc = 556;
		rType = 0;
		vrLen = 794;
		vrLoc = 0;
	};
	4E5471280832AB8400CA0375 = {
		fRef = 4E2932A7082E5984004AD73C;
		isa = PBXTextBookmark;
		name = "template.c: 18";
		rLen = 0;
		rLoc = 247;
		rType = 0;
		vrLen = 518;
		vrLoc = 1805;
	};
	4E6A5CA0082EA09E00ED6FD8 = {
		fRef = 4E6E40C4082CB46F00642FF0;
		isa = PBXTextBookmark;
		name = "options.h: 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 1401;
		vrLoc = 0;
	};
	4E6A5CA3082EA09E00ED6FD8 = {
		fRef = 4E6E40C4082CB46F00642FF0;
		isa = PBXTextBookmark;
		name = "options.h: 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 1401;
		vrLoc = 0;
	};
	4E6A5CA5082EA12700ED6FD8 = {
		fRef = 4E6E40C3082CB46F00642FF0;
		isa = PBXTextBookmark;
		name = "nfft.h: 127";
		rLen = 0;
		rLoc = 5103;
		rType = 0;
		vrLen = 1442;
		vrLoc = 4339;
	};
	4E6A5CA7082EA12700ED6FD8 = {
		isa = PBXFileReference;
		lastKnownFileType = sourcecode.cpp.cpp;
		name = group.cpp;
		path = /sw/share/doc/doxygen/examples/group.cpp;
		refType = 0;
		sourceTree = "<absolute>";
	};
	4E6A5CA8082EA12700ED6FD8 = {
		fRef = 4E6E40C3082CB46F00642FF0;
		isa = PBXTextBookmark;
		name = "nfft.h: 127";
		rLen = 0;
		rLoc = 5103;
		rType = 0;
		vrLen = 1442;
		vrLoc = 4339;
	};
	4E6A5CBD082EA20000ED6FD8 = {
		fRef = 4E6A5CA7082EA12700ED6FD8;
		isa = PBXTextBookmark;
		name = "@defgroup group1";
		rLen = 16;
		rLoc = 4;
		rType = 0;
		vrLen = 563;
		vrLoc = 0;
	};
	4E6A5CC3082EA20000ED6FD8 = {
		fRef = 4E6A5CA7082EA12700ED6FD8;
		isa = PBXTextBookmark;
		name = "@defgroup group1";
		rLen = 16;
		rLoc = 4;
		rType = 0;
		vrLen = 563;
		vrLoc = 0;
	};
	4E6A5D13082EA99E00ED6FD8 = {
		fRef = 4E293281082E501F004AD73C;
		isa = PBXTextBookmark;
		name = "infsft.h: 4";
		rLen = 0;
		rLoc = 40;
		rType = 0;
		vrLen = 40;
		vrLoc = 0;
	};
	4E6A5D1D082EAA9E00ED6FD8 = {
		fRef = 4E6CD54D07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "util.h: error_f_hat";
		rLen = 0;
		rLoc = 614;
		rType = 0;
		vrLen = 617;
		vrLoc = 0;
	};
	4E6CD54507C54A7E0040176B = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 2511}}";
			sepNavSelRange = "{814, 0}";
			sepNavVisRect = "{{0, 208}, {898, 576}}";
		};
	};
	4E6CD54607C54A7E0040176B = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {943, 1295}}";
			sepNavSelRange = "{2221, 0}";
			sepNavVisRect = "{{0, 704}, {943, 576}}";
			sepNavWindowFrame = "{{15, 77}, {1280, 755}}";
		};
	};
	4E6CD54A07C54A7E0040176B = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 10367}}";
			sepNavSelRange = "{15109, 0}";
			sepNavVisRect = "{{0, 9791}, {898, 576}}";
			sepNavWindowFrame = "{{72, 109}, {1280, 755}}";
		};
	};
	4E6CD54B07C54A7E0040176B = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 1887}}";
			sepNavSelRange = "{224, 41}";
			sepNavVisRect = "{{0, 0}, {898, 576}}";
		};
	};
	4E6CD54C07C54A7E0040176B = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {766, 3569}}";
			sepNavSelRange = "{2669, 0}";
			sepNavVisRect = "{{0, 1824}, {766, 406}}";
		};
	};
	4E6CD54D07C54A7E0040176B = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 576}}";
			sepNavSelRange = "{852, 0}";
			sepNavVisRect = "{{0, 0}, {898, 576}}";
		};
	};
	4E6CD56E07C54E170040176B = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 1407}}";
			sepNavSelRange = "{147, 102}";
			sepNavVisRect = "{{0, 0}, {898, 576}}";
		};
	};
	4E6CD57607C54E630040176B = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {943, 3615}}";
			sepNavSelRange = "{2101, 14}";
			sepNavVisRect = "{{0, 2112}, {943, 473}}";
		};
	};
	4E6CD5D607C555500040176B = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 1167}}";
			sepNavSelRange = "{1472, 0}";
			sepNavVisRect = "{{0, 96}, {898, 576}}";
		};
	};
	4E6CD5D707C555500040176B = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 4095}}";
			sepNavSelRange = "{3686, 0}";
			sepNavVisRect = "{{0, 1968}, {898, 576}}";
		};
	};
	4E6E40C2082CB46F00642FF0 = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {734, 21839}}";
			sepNavSelRange = "{27983, 0}";
			sepNavVisRect = "{{0, 8320}, {734, 465}}";
		};
	};
	4E6E40C3082CB46F00642FF0 = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {943, 4191}}";
			sepNavSelRange = "{5103, 0}";
			sepNavVisRect = "{{0, 1768}, {943, 576}}";
		};
	};
	4E6E40C4082CB46F00642FF0 = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {943, 655}}";
			sepNavSelRange = "{0, 0}";
			sepNavVisRect = "{{0, 0}, {943, 576}}";
		};
	};
	4E6E40E9082CB6C600642FF0 = {
		activeArgIndex = 0;
		activeArgIndices = (
			YES,
		);
		argumentStrings = (
			"< ../matlab/temp.in",
		);
		configStateDict = {
			"PBXLSLaunchAction-0" = {
				PBXLSLaunchAction = 0;
				PBXLSLaunchStartAction = 1;
				PBXLSLaunchStdioStyle = 2;
				PBXLSLaunchStyle = 0;
				class = PBXLSRunLaunchConfig;
				displayName = "Executable Runner";
				identifier = com.apple.Xcode.launch.runConfig;
				remoteHostInfo = "";
				startActionInfo = "";
			};
		};
		cppStopOnCatchEnabled = 0;
		cppStopOnThrowEnabled = 0;
		customDataFormattersEnabled = 1;
		debuggerPlugin = GDBDebugging;
		disassemblyDisplayState = 0;
		dylibVariantSuffix = "";
		enableDebugStr = 1;
		environmentEntries = (
		);
		isa = PBXExecutable;
		launchableReference = 4E6E40EA082CB6C600642FF0;
		libgmallocEnabled = 0;
		name = NFSFT2;
		shlibInfoDictList = (
		);
		sourceDirectories = (
		);
		startupPath = /Users/keiner/Temporary/nfft/examples;
	};
	4E6E40EA082CB6C600642FF0 = {
		isa = PBXFileReference;
		lastKnownFileType = file;
		name = nfsft2;
		path = /Users/keiner/Temporary/nfft/examples/nfsft2;
		refType = 0;
		sourceTree = "<absolute>";
	};
	4E6F4839082D024B007CC678 = {
		fRef = 4E6CD57607C54E630040176B;
		isa = PBXTextBookmark;
		name = "legendre.c: 155";
		rLen = 0;
		rLoc = 3157;
		rType = 0;
		vrLen = 498;
		vrLoc = 0;
	};
	4E71467507D244A8002513CA = {
		fRef = 4E6CD54C07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "util.c: 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 517;
		vrLoc = 0;
	};
	4E75157F082C0CF4002018A8 = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 927}}";
			sepNavSelRange = "{1488, 0}";
			sepNavVisRect = "{{0, 351}, {898, 576}}";
		};
	};
	4E751580082C0CF4002018A8 = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 6831}}";
			sepNavSelRange = "{10489, 0}";
			sepNavVisRect = "{{0, 4360}, {898, 576}}";
			sepNavWindowFrame = "{{15, 73}, {1280, 861}}";
		};
	};
	4E751588082C0D65002018A8 = {
		fRef = 4E75157F082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.h: 1";
		rLen = 0;
		rLoc = 287;
		rType = 0;
		vrLen = 159;
		vrLoc = 0;
	};
	4E8A26AA0838C11700216481 = {
		fRef = 4E6CD5D607C555500040176B;
		isa = PBXTextBookmark;
		name = "direct.h: adjoint_ndsft2";
		rLen = 0;
		rLoc = 3003;
		rType = 0;
		vrLen = 1507;
		vrLoc = 1500;
	};
	4E8A26AB0838C11700216481 = {
		fRef = 4E6CD5D707C555500040176B;
		isa = PBXTextBookmark;
		name = "direct.c: adjoint_ndsft2";
		rLen = 0;
		rLoc = 3723;
		rType = 0;
		vrLen = 0;
		vrLoc = 6415;
	};
	4E8A26E10838C49000216481 = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 3311}}";
			sepNavSelRange = "{1563, 183}";
			sepNavVisRect = "{{0, 848}, {898, 576}}";
		};
	};
	4E8A27190838CCE000216481 = {
		fRef = 4E6CD54A07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "nfsft.c: 498";
		rLen = 0;
		rLoc = 13005;
		rType = 0;
		vrLen = 482;
		vrLoc = 10778;
	};
	4E8A271D0838CCE000216481 = {
		fRef = 4E6CD54A07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "nfsft.c: 498";
		rLen = 0;
		rLoc = 13005;
		rType = 0;
		vrLen = 482;
		vrLoc = 10778;
	};
	4E8A271E0838CCE000216481 = {
		fRef = 4E751580082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.c: 327";
		rLen = 0;
		rLoc = 13188;
		rType = 0;
		vrLen = 739;
		vrLoc = 10632;
	};
	4E8A271F0838CCE000216481 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 165";
		rLen = 0;
		rLoc = 6591;
		rType = 0;
		vrLen = 628;
		vrLoc = 4674;
	};
	4E8A27480838DF1300216481 = {
		isa = PBXFileReference;
		lastKnownFileType = sourcecode.c.objc;
		name = bifur.m;
		path = "/Users/keiner/Archiv/Studium/Semester04/Numerik II/Blatt08/bifur.m";
		refType = 0;
		sourceTree = "<absolute>";
	};
	4E8A274F0838DF2000216481 = {
		isa = PBXFileReference;
		lastKnownFileType = sourcecode.c.objc;
		name = makea3.m;
		path = "/Users/keiner/Archiv/Studium/Semester04/Numerik II/Blatt08/makea3.m";
		refType = 0;
		sourceTree = "<absolute>";
	};
	4E8A275A0838E1AC00216481 = {
		fRef = 4E8A274F0838DF2000216481;
		isa = PBXTextBookmark;
		name = "makea3.m: 21";
		rLen = 0;
		rLoc = 651;
		rType = 0;
		vrLen = 651;
		vrLoc = 0;
	};
	4E8A275B0838E1AC00216481 = {
		fRef = 4E8A27480838DF1300216481;
		isa = PBXTextBookmark;
		name = "bifur.m: 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 588;
		vrLoc = 0;
	};
	4E8A27600838E1FB00216481 = {
		fRef = 4E8A27610838E1FB00216481;
		isa = PBXTextBookmark;
		name = "(null): 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 1281;
		vrLoc = 9799;
	};
	4E8A27610838E1FB00216481 = {
		isa = PBXFileReference;
		lastKnownFileType = sourcecode.c.h;
		name = ifftw.h;
		path = "/Users/keiner/Temporary/fftw-3.0/kernel/ifftw.h";
		refType = 0;
		sourceTree = "<absolute>";
	};
	4E8A27670838E2CF00216481 = {
		fRef = 4E13CA0B07EB1770003D3B6C;
		isa = PBXTextBookmark;
		name = "fftw3.h: 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 1463;
		vrLoc = 7977;
	};
	4EAD66DF083A816700C61F13 = {
		fRef = 4E6CD54507C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "api.h: 82";
		rLen = 0;
		rLoc = 1530;
		rType = 0;
		vrLen = 685;
		vrLoc = 1214;
	};
	4EAD66E6083A839A00C61F13 = {
		fRef = 4E8A26E10838C49000216481;
		isa = PBXTextBookmark;
		name = "  int n,k,d;\n";
		rLen = 0;
		rLoc = 3916;
		rType = 0;
		vrLen = 610;
		vrLoc = 1381;
	};
	4EAD66E8083A839A00C61F13 = {
		fRef = 4E8A26E10838C49000216481;
		isa = PBXTextBookmark;
		name = "  int n,k,d;\n";
		rLen = 0;
		rLoc = 3916;
		rType = 0;
		vrLen = 610;
		vrLoc = 1381;
	};
	4EAD6703083A846800C61F13 = {
		fRef = 4E29331A082E672F004AD73C;
		isa = PBXTextBookmark;
		name = "wrapper.c: main";
		rLen = 0;
		rLoc = 4729;
		rType = 0;
		vrLen = 446;
		vrLoc = 4280;
	};
	4EAD6705083A846800C61F13 = {
		fRef = 4E29331A082E672F004AD73C;
		isa = PBXTextBookmark;
		name = "wrapper.c: main";
		rLen = 0;
		rLoc = 4744;
		rType = 0;
		vrLen = 475;
		vrLoc = 4251;
	};
	4EAD6706083A846800C61F13 = {
		fRef = 4E75157F082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.h: 58";
		rLen = 0;
		rLoc = 1725;
		rType = 0;
		vrLen = 1046;
		vrLoc = 686;
	};
	4EAD6707083A846800C61F13 = {
		fRef = 4E751580082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = multiplyU;
		rLen = 9;
		rLoc = 11095;
		rType = 0;
		vrLen = 783;
		vrLoc = 9789;
	};
	4EAD6708083A846800C61F13 = {
		fRef = 4E75157F082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.h: 58";
		rLen = 0;
		rLoc = 1727;
		rType = 0;
		vrLen = 1046;
		vrLoc = 686;
	};
	4EAD6726083A854900C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.h: 38";
		rLen = 0;
		rLoc = 1013;
		rType = 0;
		vrLen = 1137;
		vrLoc = 186;
	};
	4EAD6749083A879B00C61F13 = {
		fRef = 4E6CD5D707C555500040176B;
		isa = PBXTextBookmark;
		name = "direct.c: 137";
		rLen = 0;
		rLoc = 3686;
		rType = 0;
		vrLen = 562;
		vrLoc = 3528;
	};
	4EAD675A083A883700C61F13 = {
		fRef = 4E29331A082E672F004AD73C;
		isa = PBXTextBookmark;
		name = "wrapper.c: 156";
		rLen = 0;
		rLoc = 3625;
		rType = 0;
		vrLen = 642;
		vrLoc = 3362;
	};
	4EAD678A083A908800C61F13 = {
		fRef = 4E6CD54A07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "nfsft.c: 312";
		rLen = 0;
		rLoc = 6969;
		rType = 0;
		vrLen = 686;
		vrLoc = 7057;
	};
	4EAD6791083A911700C61F13 = {
		fRef = 4E29331A082E672F004AD73C;
		isa = PBXTextBookmark;
		name = "wrapper.c: 199";
		rLen = 0;
		rLoc = 4529;
		rType = 0;
		vrLen = 446;
		vrLoc = 4295;
	};
	4EAD6792083A911700C61F13 = {
		fRef = 4E6CD54A07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "nfsft.c: 316";
		rLen = 0;
		rLoc = 7004;
		rType = 0;
		vrLen = 717;
		vrLoc = 6760;
	};
	4EAD6796083A913A00C61F13 = {
		fRef = 4E29331A082E672F004AD73C;
		isa = PBXTextBookmark;
		name = "wrapper.c: 199";
		rLen = 0;
		rLoc = 4529;
		rType = 0;
		vrLen = 475;
		vrLoc = 4266;
	};
	4EAD67A3083A917100C61F13 = {
		fileReference = 4E6CD54A07C54A7E0040176B;
		functionName = "nfsft_forget()";
		isa = PBXFileBreakpoint;
		lineNumber = 316;
		state = 1;
	};
	4EAD67AF083A92C400C61F13 = {
		fRef = 4E6CD54A07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = nfsft_precompute;
		rLen = 16;
		rLoc = 9495;
		rType = 0;
		vrLen = 1371;
		vrLoc = 10612;
	};
	4EAD67B4083A934800C61F13 = {
		fRef = 4E751580082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.c: 295";
		rLen = 0;
		rLoc = 11039;
		rType = 0;
		vrLen = 803;
		vrLoc = 9308;
	};
	4EAD67C1083A9CFA00C61F13 = {
		fRef = 4E6CD54A07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "nfsft.c: 289";
		rLen = 0;
		rLoc = 6513;
		rType = 0;
		vrLen = 530;
		vrLoc = 6365;
	};
	4EAD67C2083A9CFA00C61F13 = {
		fRef = 4E6CD54507C54A7E0040176B;
		isa = PBXTextBookmark;
		name = FIRST_L;
		rLen = 7;
		rLoc = 659;
		rType = 0;
		vrLen = 431;
		vrLoc = 485;
	};
	4EAD67C4083A9CFA00C61F13 = {
		fRef = 4E6CD54A07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "nfsft.c: 289";
		rLen = 0;
		rLoc = 6513;
		rType = 0;
		vrLen = 530;
		vrLoc = 6365;
	};
	4EAD67C5083A9CFA00C61F13 = {
		fRef = 4E6CD54507C54A7E0040176B;
		isa = PBXTextBookmark;
		name = FIRST_L;
		rLen = 7;
		rLoc = 659;
		rType = 0;
		vrLen = 431;
		vrLoc = 485;
	};
	4EAD67CE083A9E4100C61F13 = {
		fRef = 4E29331A082E672F004AD73C;
		isa = PBXTextBookmark;
		name = "wrapper.c: 172";
		rLen = 0;
		rLoc = 4042;
		rType = 0;
		vrLen = 675;
		vrLoc = 3634;
	};
	4EAD67CF083A9E4100C61F13 = {
		fRef = 4E75157F082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.h: 58";
		rLen = 0;
		rLoc = 1727;
		rType = 0;
		vrLen = 1046;
		vrLoc = 686;
	};
	4EAD67D0083A9E4100C61F13 = {
		fRef = 4E6CD54D07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "GAUSS_WEIERSTRASS(k,p)";
		rLen = 22;
		rLoc = 1041;
		rType = 0;
		vrLen = 1073;
		vrLoc = 57;
	};
	4EAD67D1083A9E4100C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 8";
		rLen = 0;
		rLoc = 192;
		rType = 0;
		vrLen = 918;
		vrLoc = 729;
	};
	4EAD67D2083A9E4100C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.h: 38";
		rLen = 0;
		rLoc = 1421;
		rType = 0;
		vrLen = 923;
		vrLoc = 0;
	};
	4EAD67D3083A9E4100C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 8";
		rLen = 0;
		rLoc = 192;
		rType = 0;
		vrLen = 814;
		vrLoc = 0;
	};
	4EAD67D4083A9E4100C61F13 = {
		fRef = 4E75157F082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.h: 58";
		rLen = 0;
		rLoc = 1727;
		rType = 0;
		vrLen = 750;
		vrLoc = 0;
	};
	4EAD67D5083A9E4100C61F13 = {
		fRef = 4E6CD54D07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "GAUSS_WEIERSTRASS(k,p)";
		rLen = 22;
		rLoc = 1041;
		rType = 0;
		vrLen = 1033;
		vrLoc = 0;
	};
	4EAD67F3083B449C00C61F13 = {
		fRef = 4E751580082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.c: 7";
		rLen = 0;
		rLoc = 186;
		rType = 0;
		vrLen = 828;
		vrLoc = 0;
	};
	4EAD67F4083B449C00C61F13 = {
		fRef = 4E6CD54507C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "api.h: 142";
		rLen = 0;
		rLoc = 2990;
		rType = 0;
		vrLen = 968;
		vrLoc = 2435;
	};
	4EAD67F5083B449C00C61F13 = {
		fRef = 4E75157F082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.h: forgetU";
		rLen = 0;
		rLoc = 678;
		rType = 0;
		vrLen = 982;
		vrLoc = 752;
	};
	4EAD67F6083B449C00C61F13 = {
		fRef = 4E751580082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.c: 312";
		rLen = 0;
		rLoc = 11423;
		rType = 0;
		vrLen = 879;
		vrLoc = 10378;
	};
	4EAD67F7083B449C00C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 6";
		rLen = 0;
		rLoc = 146;
		rType = 0;
		vrLen = 815;
		vrLoc = 0;
	};
	4EAD67F8083B449C00C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.h: 21";
		rLen = 0;
		rLoc = 655;
		rType = 0;
		vrLen = 924;
		vrLoc = 0;
	};
	4EAD67F9083B449C00C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 157";
		rLen = 0;
		rLoc = 5925;
		rType = 0;
		vrLen = 765;
		vrLoc = 7886;
	};
	4EAD67FA083B449C00C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.h: 38";
		rLen = 0;
		rLoc = 1013;
		rType = 0;
		vrLen = 1139;
		vrLoc = 186;
	};
	4EAD6800083B44CA00C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 246";
		rLen = 0;
		rLoc = 8798;
		rType = 0;
		vrLen = 844;
		vrLoc = 8020;
	};
	4EAD680F083B6A5200C61F13 = {
		fRef = 4E751580082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "          for (tau_stab = tau-1; tau_stab <= t-2; tau_stab++)\n          {\n";
		rLen = 74;
		rLoc = 10558;
		rType = 0;
		vrLen = 1018;
		vrLoc = 9782;
	};
	4EAD6816083B748600C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 267";
		rLen = 0;
		rLoc = 9471;
		rType = 0;
		vrLen = 852;
		vrLoc = 7829;
	};
	4EAD6867083BB4D200C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "        multiplyU(tw->vec3, tw->vec4, act_U, t-1, n, 1, tw, 0.0);\n";
		rLen = 78;
		rLoc = 3833;
		rType = 0;
		vrLen = 812;
		vrLoc = 2678;
	};
	4EAD6868083BB4D200C61F13 = {
		fRef = 4E751580082C0CF4002018A8;
		isa = PBXTextBookmark;
		rLen = 1;
		rLoc = 274;
		rType = 1;
	};
	4EAD6869083BB4D200C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "        multiplyU(tw->vec3, tw->vec4, act_U, t-1, n, 1, tw, 0.0);\n";
		rLen = 78;
		rLoc = 3833;
		rType = 0;
		vrLen = 812;
		vrLoc = 2678;
	};
	4EAD6877083BBB3A00C61F13 = {
		fRef = 4E29331A082E672F004AD73C;
		isa = PBXTextBookmark;
		name = "wrapper.c: 172";
		rLen = 0;
		rLoc = 4042;
		rType = 0;
		vrLen = 675;
		vrLoc = 3634;
	};
	4EAD687C083BBB3A00C61F13 = {
		fRef = 4E29331A082E672F004AD73C;
		isa = PBXTextBookmark;
		name = "wrapper.c: 172";
		rLen = 0;
		rLoc = 4042;
		rType = 0;
		vrLen = 675;
		vrLoc = 3634;
	};
	4EAD687D083BBB3A00C61F13 = {
		fRef = 4E6CD54D07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "util.h: 27";
		rLen = 0;
		rLoc = 852;
		rType = 0;
		vrLen = 1073;
		vrLoc = 57;
	};
	4EAD687E083BBB3A00C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.h: 6";
		rLen = 0;
		rLoc = 49;
		rType = 0;
		vrLen = 855;
		vrLoc = 0;
	};
	4EAD687F083BBB3A00C61F13 = {
		fRef = 4E6CD54B07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "/** \\defgroup nfsft NFSFT: Public API */\n";
		rLen = 41;
		rLoc = 224;
		rType = 0;
		vrLen = 615;
		vrLoc = 0;
	};
	4EAD6887083BC07700C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "void flft(const int M, const int t, const int n, complex *const f_hat, \n          struct nfsft_wisdom *const wisdom);\n";
		rLen = 118;
		rLoc = 710;
		rType = 0;
		vrLen = 1248;
		vrLoc = 267;
	};
	4EAD6888083BC07700C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 7";
		rLen = 0;
		rLoc = 169;
		rType = 0;
		vrLen = 811;
		vrLoc = 0;
	};
	4EAD6889083BC07700C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "void flft_adjoint(const int M, const int t, const int n, complex *const f_hat, \n                  struct nfsft_wisdom *const wisdom);\n";
		rLen = 134;
		rLoc = 1442;
		rType = 0;
		vrLen = 1200;
		vrLoc = 315;
	};
	4EAD688A083BC07700C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 8";
		rLen = 0;
		rLoc = 283;
		rType = 0;
		vrLen = 819;
		vrLoc = 0;
	};
	4EAD688B083BC07700C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "\\f$t := \\left\\lceil \\log_2 M \\right\\rceil\\f$";
		rLen = 44;
		rLoc = 409;
		rType = 0;
		vrLen = 938;
		vrLoc = 15;
	};
	4EAD689E083BC40000C61F13 = {
		fRef = 4E6CD54D07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "util.h: 27";
		rLen = 0;
		rLoc = 852;
		rType = 0;
		vrLen = 1130;
		vrLoc = 0;
	};
	4EAD68A1083BC40000C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 334";
		rLen = 0;
		rLoc = 10232;
		rType = 0;
		vrLen = 889;
		vrLoc = 6528;
	};
	4EAD68A2083BC40000C61F13 = {
		fRef = 4E6CD54D07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "util.h: 27";
		rLen = 0;
		rLoc = 852;
		rType = 0;
		vrLen = 1130;
		vrLoc = 0;
	};
	4EAD68A3083BC40000C61F13 = {
		fRef = 4E6CD54507C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "+k)";
		rLen = 3;
		rLoc = 646;
		rType = 0;
		vrLen = 713;
		vrLoc = 183;
	};
	4EAD68A9083BC44900C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 204";
		rLen = 0;
		rLoc = 6591;
		rType = 0;
		vrLen = 903;
		vrLoc = 6426;
	};
	4EAD68AD083BC47500C61F13 = {
		fRef = 4E6CD54A07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "nfsft.c: 644";
		rLen = 0;
		rLoc = 15109;
		rType = 0;
		vrLen = 799;
		vrLoc = 14346;
	};
	4EAD68AF083BC47500C61F13 = {
		fRef = 4E6CD54A07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "nfsft.c: 644";
		rLen = 0;
		rLoc = 15109;
		rType = 0;
		vrLen = 799;
		vrLoc = 14346;
	};
	4EAD68B8083BC4A800C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 319";
		rLen = 0;
		rLoc = 10142;
		rType = 0;
		vrLen = 1081;
		vrLoc = 9303;
	};
	4EAD68BF083BC4E100C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 319";
		rLen = 0;
		rLoc = 10142;
		rType = 0;
		vrLen = 1081;
		vrLoc = 9303;
	};
	4EAD68CA083BC5A900C61F13 = {
		fRef = 4EAD68CB083BC5A900C61F13;
		isa = PBXTextBookmark;
		name = "(null): 710";
		rLen = 0;
		rLoc = 29197;
		rType = 0;
		vrLen = 1450;
		vrLoc = 28360;
	};
	4EAD68CB083BC5A900C61F13 = {
		isa = PBXFileReference;
		name = doxygen.cfg;
		path = /Users/keiner/Temporary/trunk/obsolete/keiner/doxygen.cfg;
		refType = 0;
		sourceTree = "<absolute>";
	};
	4EAD68CD083BC5A900C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.h: 17";
		rLen = 0;
		rLoc = 434;
		rType = 0;
		vrLen = 1384;
		vrLoc = 131;
	};
	4EAD68CE083BC5A900C61F13 = {
		fRef = 4EAD68CF083BC5A900C61F13;
		isa = PBXTextBookmark;
		name = "(null): 710";
		rLen = 0;
		rLoc = 29197;
		rType = 0;
		vrLen = 1450;
		vrLoc = 28360;
	};
	4EAD68CF083BC5A900C61F13 = {
		isa = PBXFileReference;
		name = doxygen.cfg;
		path = /Users/keiner/Temporary/trunk/obsolete/keiner/doxygen.cfg;
		refType = 0;
		sourceTree = "<absolute>";
	};
	4EAD68D7083BC5F500C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = LAST_L;
		rLen = 6;
		rLoc = 8244;
		rType = 0;
		vrLen = 815;
		vrLoc = 7338;
	};
	4EAD68D9083BC5F500C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = LAST_L;
		rLen = 6;
		rLoc = 8244;
		rType = 0;
		vrLen = 815;
		vrLoc = 7338;
	};
	4EAD68E5083BC67200C61F13 = {
		fRef = 4E6E40C2082CB46F00642FF0;
		isa = PBXTextBookmark;
		rLen = 8;
		rLoc = 27962;
		rType = 0;
	};
	4EAD68E9083BC6FC00C61F13 = {
		fRef = 4E6CD54B07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "/** \\defgroup nfsft NFSFT: Public API */\n";
		rLen = 41;
		rLoc = 224;
		rType = 0;
		vrLen = 788;
		vrLoc = 0;
	};
	4EAD68EC083BC6FC00C61F13 = {
		fRef = 4E6CD56E07C54E170040176B;
		isa = PBXTextBookmark;
		name = "/** \\defgroup nfsft_legendre NFSFT: Functions related to associated Legendre functions/polynomials */\n";
		rLen = 102;
		rLoc = 147;
		rType = 0;
		vrLen = 542;
		vrLoc = 0;
	};
	4EAD68ED083BC6FC00C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 319";
		rLen = 0;
		rLoc = 10142;
		rType = 0;
		vrLen = 1081;
		vrLoc = 9303;
	};
	4EAD68F0083BC6FC00C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "\\mathbb{N}";
		rLen = 10;
		rLoc = 1026;
		rType = 0;
		vrLen = 1400;
		vrLoc = 131;
	};
	4EAD68F1083BC6FC00C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 319";
		rLen = 0;
		rLoc = 10142;
		rType = 0;
		vrLen = 1081;
		vrLoc = 9303;
	};
	4EAD68F2083BC6FC00C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "\\mathbb{N}";
		rLen = 10;
		rLoc = 967;
		rType = 0;
		vrLen = 1169;
		vrLoc = 0;
	};
	4EAD68F3083BC6FC00C61F13 = {
		fRef = 4E6CD54B07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "/** \\defgroup nfsft NFSFT: Public API */\n";
		rLen = 41;
		rLoc = 224;
		rType = 0;
		vrLen = 788;
		vrLoc = 0;
	};
	4EAD68F4083BC6FC00C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "\\mathbb{N}";
		rLen = 10;
		rLoc = 967;
		rType = 0;
		vrLen = 1169;
		vrLoc = 0;
	};
	4EAD68F5083BC6FC00C61F13 = {
		fRef = 4E6CD5D707C555500040176B;
		isa = PBXTextBookmark;
		name = "direct.c: 137";
		rLen = 0;
		rLoc = 3686;
		rType = 0;
		vrLen = 679;
		vrLoc = 3440;
	};
	4EAD68F6083BC6FC00C61F13 = {
		fRef = 4E6CD5D607C555500040176B;
		isa = PBXTextBookmark;
		name = "direct.h: 40";
		rLen = 0;
		rLoc = 1472;
		rType = 0;
		vrLen = 1422;
		vrLoc = 86;
	};
	4EAD68F7083BC6FC00C61F13 = {
		fRef = 4E6CD5D707C555500040176B;
		isa = PBXTextBookmark;
		name = "direct.c: 137";
		rLen = 0;
		rLoc = 3686;
		rType = 0;
		vrLen = 679;
		vrLoc = 3440;
	};
	4EAD68F8083BC6FC00C61F13 = {
		fRef = 4E6CD56E07C54E170040176B;
		isa = PBXTextBookmark;
		name = "/** \\defgroup nfsft_legendre NFSFT: Functions related to associated Legendre functions/polynomials */\n";
		rLen = 102;
		rLoc = 147;
		rType = 0;
		vrLen = 542;
		vrLoc = 0;
	};
	4EAD68F9083BC6FC00C61F13 = {
		fRef = 4E6CD54507C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "+k)";
		rLen = 3;
		rLoc = 646;
		rType = 0;
		vrLen = 706;
		vrLoc = 190;
	};
	4EAD68FA083BC6FC00C61F13 = {
		fRef = 4E5470E10832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.c: 319";
		rLen = 0;
		rLoc = 10142;
		rType = 0;
		vrLen = 1081;
		vrLoc = 9303;
	};
	4EAD68FB083BC6FC00C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.h: 7";
		rLen = 0;
		rLoc = 68;
		rType = 0;
		vrLen = 1222;
		vrLoc = 0;
	};
	4EAD68FF083BC73000C61F13 = {
		fRef = 4E6CD54507C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "api.h: 44";
		rLen = 0;
		rLoc = 814;
		rType = 0;
		vrLen = 720;
		vrLoc = 190;
	};
	4EAD6901083BC73000C61F13 = {
		fRef = 4E6CD54507C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "api.h: 44";
		rLen = 0;
		rLoc = 814;
		rType = 0;
		vrLen = 720;
		vrLoc = 190;
	};
	4EAD6908083BC7E000C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.h: 37";
		rLen = 0;
		rLoc = 1273;
		rType = 0;
		vrLen = 1444;
		vrLoc = 72;
	};
	4EAD6909083BC7E000C61F13 = {
		fRef = 4E75157F082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.h: 52";
		rLen = 0;
		rLoc = 1488;
		rType = 0;
		vrLen = 1148;
		vrLoc = 528;
	};
	4EAD690A083BC7E000C61F13 = {
		fRef = 4E751580082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.c: 298";
		rLen = 0;
		rLoc = 10489;
		rType = 0;
		vrLen = 1248;
		vrLoc = 9642;
	};
	4EAD690B083BC7E000C61F13 = {
		fRef = 4E6CD5D607C555500040176B;
		isa = PBXTextBookmark;
		name = "direct.h: 40";
		rLen = 0;
		rLoc = 1472;
		rType = 0;
		vrLen = 1422;
		vrLoc = 86;
	};
	4EAD690C083BC7E000C61F13 = {
		fRef = 4E5470E20832A31200CA0375;
		isa = PBXTextBookmark;
		name = "flft.h: 37";
		rLen = 0;
		rLoc = 1273;
		rType = 0;
		vrLen = 1444;
		vrLoc = 72;
	};
	4EAD690D083BC7E000C61F13 = {
		fRef = 4E75157F082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.h: 52";
		rLen = 0;
		rLoc = 1488;
		rType = 0;
		vrLen = 1148;
		vrLoc = 528;
	};
	4EAD690E083BC7E000C61F13 = {
		fRef = 4E751580082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.c: 298";
		rLen = 0;
		rLoc = 10489;
		rType = 0;
		vrLen = 1248;
		vrLoc = 9642;
	};
	4EAD690F083BC7E000C61F13 = {
		fRef = 4E6CD5D607C555500040176B;
		isa = PBXTextBookmark;
		name = "direct.h: 40";
		rLen = 0;
		rLoc = 1472;
		rType = 0;
		vrLen = 1422;
		vrLoc = 86;
	};
	4EAD6913083BC8A700C61F13 = {
		fRef = 4E6CD5D707C555500040176B;
		isa = PBXTextBookmark;
		name = "direct.c: 137";
		rLen = 0;
		rLoc = 3686;
		rType = 0;
		vrLen = 679;
		vrLoc = 3440;
	};
	4EAD6914083BC8A700C61F13 = {
		fRef = 4E6CD5D707C555500040176B;
		isa = PBXTextBookmark;
		name = "direct.c: 137";
		rLen = 0;
		rLoc = 3686;
		rType = 0;
		vrLen = 679;
		vrLoc = 3440;
	};
	4EAD691A083BC93100C61F13 = {
		isa = PBXFileReference;
		lastKnownFileType = text;
		name = configure.in;
		path = /Users/keiner/Temporary/trunk/obsolete/keiner/configure.in;
		refType = 0;
		sourceTree = "<absolute>";
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {1931, 735}}";
			sepNavSelRange = "{1375, 0}";
			sepNavVisRect = "{{977, 144}, {898, 576}}";
		};
	};
	4EAD692A083BC9A900C61F13 = {
		isa = PBXFileReference;
		lastKnownFileType = text;
		name = headers.m4;
		path = /sw/share/autoconf/autoconf/headers.m4;
		refType = 0;
		sourceTree = "<absolute>";
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 12703}}";
			sepNavSelRange = "{10098, 10}";
			sepNavVisRect = "{{0, 4216}, {898, 576}}";
		};
	};
	4EAD6954083BD14300C61F13 = {
		fRef = 4E8A26E10838C49000216481;
		isa = PBXTextBookmark;
		name = "performance.c: 84";
		rLen = 0;
		rLoc = 2042;
		rType = 0;
		vrLen = 952;
		vrLoc = 3963;
	};
	4EAD6963083BD20500C61F13 = {
		isa = PBXFileReference;
		lastKnownFileType = text;
		name = general.m4;
		path = /sw/share/autoconf/autoconf/general.m4;
		refType = 0;
		sourceTree = "<absolute>";
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 40383}}";
			sepNavSelRange = "{5700, 10}";
			sepNavVisRect = "{{0, 2408}, {898, 576}}";
		};
	};
	4EAD6969083BD39C00C61F13 = {
		fRef = 4EAD6963083BD20500C61F13;
		isa = PBXTextBookmark;
		name = AC_REQUIRE;
		rLen = 10;
		rLoc = 5700;
		rType = 0;
		vrLen = 996;
		vrLoc = 5286;
	};
	4EAD696A083BD39C00C61F13 = {
		fRef = 4EAD692A083BC9A900C61F13;
		isa = PBXTextBookmark;
		name = AC_REQUIRE;
		rLen = 10;
		rLoc = 10098;
		rType = 0;
		vrLen = 1212;
		vrLoc = 9454;
	};
	4EAD6978083BD73400C61F13 = {
		fRef = 4E02C48E082F816D00EC0863;
		isa = PBXTextBookmark;
		name = "convolution.c: 57";
		rLen = 0;
		rLoc = 1427;
		rType = 0;
		vrLen = 905;
		vrLoc = 1754;
	};
	4EAD6979083BD73400C61F13 = {
		fRef = 4E8A26E10838C49000216481;
		isa = PBXTextBookmark;
		name = "  int m_min; \n  int m_max; \n  int m_stride; \n  int d_min; \n  int d_max; \n  int d_stride; \n";
		rLen = 90;
		rLoc = 2439;
		rType = 0;
		vrLen = 628;
		vrLoc = 2137;
	};
	4EAD697B083BD73400C61F13 = {
		fRef = 4E8A26E10838C49000216481;
		isa = PBXTextBookmark;
		name = "  if (argc == 1)\n  {\n    m_min = M_MIN;\n    m_max = M_MAX; \n    m_stride = M_STRIDE; \n    d_min = D_MIN; \n    d_max = D_MAX; \n    d_stride = D_STRIDE; \n    threshold = THRESHOLD;    \n  }\n  else if (argc == 8)\n  {\n    sscanf(argv[1],\"%d\",&m_min);\n    sscanf(argv[2],\"%d\",&m_max);\n    sscanf(argv[3],\"%d\",&m_stride);\n    sscanf(argv[4],\"%d\",&d_min);\n    sscanf(argv[5],\"%d\",&d_max);\n    sscanf(argv[6],\"%d\",&d_stride);\n    sscanf(argv[7],\"%d\",&threshold);\n  }\n  else\n  {\n    fprintf(stderr,\"Performance - Performance test for NFSFT\\n\");\n    fprintf(stderr,\"Usage: performance M_MIN M_MAX M_STRIDE D_MIN D_MAX D_STRIDE THRESHOLD\\n\");\n    return -1;\n  }  \n";
		rLen = 652;
		rLoc = 3145;
		rType = 0;
		vrLen = 1088;
		vrLoc = 3297;
	};
	4EAD698A083BDD2000C61F13 = {
		fRef = 4E5470A208329F8600CA0375;
		isa = PBXTextBookmark;
		name = "summation.c: 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 1058;
		vrLoc = 0;
	};
	4EAD698D083BDD2000C61F13 = {
		fRef = 4E8A26E10838C49000216481;
		isa = PBXTextBookmark;
		name = "sprintf(filename,FILENAME); \\\nfile = fopen(filename,\"w\"); \\\nif (file != NULL)  \\\n{ \\\n  fprintf(file,\"%d\\n\",((d_max-d_min)/d_stride+1)*((m_max-m_min)/m_stride+1)); \\\n  fclose(file); \\\n";
		rLen = 183;
		rLoc = 1563;
		rType = 0;
		vrLen = 949;
		vrLoc = 1248;
	};
	4EAD698E083BDD2000C61F13 = {
		fRef = 4E5470A208329F8600CA0375;
		isa = PBXTextBookmark;
		name = "summation.c: 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 1058;
		vrLoc = 0;
	};
	4EAD699D083BE07200C61F13 = {
		fRef = 4E8A26E10838C49000216481;
		isa = PBXTextBookmark;
		name = "sprintf(filename,FILENAME); \\\nfile = fopen(filename,\"w\"); \\\nif (file != NULL)  \\\n{ \\\n  fprintf(file,\"%d\\n\",((d_max-d_min)/d_stride+1)*((m_max-m_min)/m_stride+1)); \\\n  fclose(file); \\\n";
		rLen = 183;
		rLoc = 1563;
		rType = 0;
		vrLen = 931;
		vrLoc = 1266;
	};
	4EAD699E083BE07200C61F13 = {
		fRef = 4E8A26E10838C49000216481;
		isa = PBXTextBookmark;
		name = "sprintf(filename,FILENAME); \\\nfile = fopen(filename,\"w\"); \\\nif (file != NULL)  \\\n{ \\\n  fprintf(file,\"%d\\n\",((d_max-d_min)/d_stride+1)*((m_max-m_min)/m_stride+1)); \\\n  fclose(file); \\\n";
		rLen = 183;
		rLoc = 1563;
		rType = 0;
		vrLen = 931;
		vrLoc = 1266;
	};
	4EAD69A2083BE07E00C61F13 = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 8479}}";
			sepNavSelRange = "{7141, 0}";
			sepNavVisRect = "{{0, 3956}, {898, 470}}";
		};
	};
	4EAD69A3083BE08000C61F13 = {
		fRef = 4E02C48E082F816D00EC0863;
		isa = PBXTextBookmark;
		name = "convolution.c: 57";
		rLen = 0;
		rLoc = 1427;
		rType = 0;
		vrLen = 860;
		vrLoc = 1754;
	};
	4EAD69A5083BE08000C61F13 = {
		fRef = 4E02C48E082F816D00EC0863;
		isa = PBXTextBookmark;
		name = "convolution.c: 57";
		rLen = 0;
		rLoc = 1427;
		rType = 0;
		vrLen = 860;
		vrLoc = 1754;
	};
	4EAD69B0083BE0B900C61F13 = {
		isa = PBXFileReference;
		lastKnownFileType = text;
		name = Makefile.am;
		path = /Users/keiner/Temporary/trunk/obsolete/keiner/examples/Makefile.am;
		refType = 0;
		sourceTree = "<absolute>";
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 576}}";
			sepNavSelRange = "{10, 0}";
			sepNavVisRect = "{{0, 0}, {898, 576}}";
		};
	};
	4EAD69B6083BE11400C61F13 = {
		fRef = 4EAD69B0083BE0B900C61F13;
		isa = PBXTextBookmark;
		name = "Makefile.am: 1";
		rLen = 0;
		rLoc = 10;
		rType = 0;
		vrLen = 53;
		vrLoc = 0;
	};
	4EAD69BB083BE16100C61F13 = {
		fRef = 4EAD691A083BC93100C61F13;
		isa = PBXTextBookmark;
		name = "configure.in: 45";
		rLen = 0;
		rLoc = 1375;
		rType = 0;
		vrLen = 1198;
		vrLoc = 240;
	};
	4EAD69BC083BE16100C61F13 = {
		fRef = 4EAD691A083BC93100C61F13;
		isa = PBXTextBookmark;
		name = "configure.in: 45";
		rLen = 0;
		rLoc = 1375;
		rType = 0;
		vrLen = 1198;
		vrLoc = 240;
	};
	4EAD69C0083BE6C300C61F13 = {
		fRef = 4EAD69C1083BE6C300C61F13;
		isa = PBXTextBookmark;
		name = "(null): 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 510;
		vrLoc = 0;
	};
	4EAD69C1083BE6C300C61F13 = {
		isa = PBXFileReference;
		name = accuracy.m;
		path = /Users/keiner/Temporary/trunk/obsolete/keiner/tests/accuracy/accuracy.m;
		refType = 0;
		sourceTree = "<absolute>";
	};
	4EAD69CA083BE6CE00C61F13 = {
		isa = PBXFileReference;
		lastKnownFileType = sourcecode.c.objc;
		name = performance.m;
		path = /Users/keiner/Temporary/trunk/obsolete/keiner/tests/accuracy/performance.m;
		refType = 0;
		sourceTree = "<absolute>";
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 1086}}";
			sepNavSelRange = "{1227, 0}";
			sepNavVisRect = "{{0, 0}, {898, 576}}";
		};
	};
	4EAD69CB083BE6CE00C61F13 = {
		fRef = 4EAD69A2083BE07E00C61F13;
		isa = PBXTextBookmark;
		name = "accuracy.c: 187";
		rLen = 0;
		rLoc = 4824;
		rType = 0;
		vrLen = 1004;
		vrLoc = 4141;
	};
	4EAD69DA083BF72A00C61F13 = {
		fRef = 4EAD69CA083BE6CE00C61F13;
		isa = PBXTextBookmark;
		name = "performance.m: 68";
		rLen = 0;
		rLoc = 1227;
		rType = 0;
		vrLen = 739;
		vrLoc = 0;
	};
	4EAD69DB083BF72A00C61F13 = {
		fRef = 4EAD69CA083BE6CE00C61F13;
		isa = PBXTextBookmark;
		name = "performance.m: 68";
		rLen = 0;
		rLoc = 1227;
		rType = 0;
		vrLen = 739;
		vrLoc = 0;
	};
	4EAD69E2083BF94200C61F13 = {
		fRef = 4EAD69A2083BE07E00C61F13;
		isa = PBXTextBookmark;
		name = "accuracy.c: 217";
		rLen = 0;
		rLoc = 5500;
		rType = 0;
		vrLen = 1264;
		vrLoc = 5330;
	};
	4EAD69E4083BF94200C61F13 = {
		isa = PBXFileReference;
		lastKnownFileType = sourcecode.c.objc;
		name = performance.m;
		path = /Users/keiner/Temporary/trunk/obsolete/keiner/tests/performance/performance.m;
		refType = 0;
		sourceTree = "<absolute>";
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {898, 576}}";
			sepNavSelRange = "{664, 30}";
			sepNavVisRect = "{{0, 0}, {898, 576}}";
		};
	};
	4EAD69E5083BF94200C61F13 = {
		fRef = 4EAD69A2083BE07E00C61F13;
		isa = PBXTextBookmark;
		name = "accuracy.c: 217";
		rLen = 0;
		rLoc = 5500;
		rType = 0;
		vrLen = 1264;
		vrLoc = 5330;
	};
	4EAD69EE083BFCC000C61F13 = {
		fRef = 4EAD69E4083BF94200C61F13;
		isa = PBXTextBookmark;
		name = "print('-depsc',datasets{k,3});";
		rLen = 30;
		rLoc = 664;
		rType = 0;
		vrLen = 701;
		vrLoc = 0;
	};
	4EAD69EF083BFCC000C61F13 = {
		fRef = 4EAD69E4083BF94200C61F13;
		isa = PBXTextBookmark;
		name = "print('-depsc',datasets{k,3});";
		rLen = 30;
		rLoc = 664;
		rType = 0;
		vrLen = 701;
		vrLoc = 0;
	};
	4EAD6A05083C003E00C61F13 = {
		fRef = 4EAD69A2083BE07E00C61F13;
		isa = PBXTextBookmark;
		name = "accuracy.c: 264";
		rLen = 0;
		rLoc = 7141;
		rType = 0;
		vrLen = 1046;
		vrLoc = 6412;
	};
	4EAD6A06083C003E00C61F13 = {
		fRef = 4E751580082C0CF4002018A8;
		isa = PBXTextBookmark;
		name = "u.c: 276";
		rLen = 0;
		rLoc = 9792;
		rType = 0;
		vrLen = 765;
		vrLoc = 10327;
	};
	4EAD6A07083C003E00C61F13 = {
		fRef = 4E6E40C2082CB46F00642FF0;
		isa = PBXTextBookmark;
		name = "nfft.c: 535";
		rLen = 0;
		rLoc = 27983;
		rType = 0;
		vrLen = 726;
		vrLoc = 27611;
	};
	4EB20A1E07D4B30C00FD1AB8 = {
		activeArgIndex = 0;
		activeArgIndices = (
			YES,
			NO,
		);
		argumentStrings = (
			"< ../../matlab/temp.in",
			"> ../matlab/temp.out",
		);
		configStateDict = {
			"PBXLSLaunchAction-0" = {
				PBXLSLaunchAction = 0;
				PBXLSLaunchStartAction = 1;
				PBXLSLaunchStdioStyle = 2;
				PBXLSLaunchStyle = 0;
				class = PBXLSRunLaunchConfig;
				displayName = "Executable Runner";
				identifier = com.apple.Xcode.launch.runConfig;
				remoteHostInfo = "";
				startActionInfo = "";
			};
		};
		cppStopOnCatchEnabled = 0;
		cppStopOnThrowEnabled = 0;
		customDataFormattersEnabled = 1;
		debuggerPlugin = GDBDebugging;
		disassemblyDisplayState = 0;
		dylibVariantSuffix = "";
		enableDebugStr = 1;
		environmentEntries = (
		);
		isa = PBXExecutable;
		libgmallocEnabled = 0;
		name = NFSFT;
		savedGlobals = {
		};
		shlibInfoDictList = (
		);
		sourceDirectories = (
		);
		startupPath = /Users/keiner/Temporary/trunk/obsolete/keiner/examples/wrapper;
	};
	4EB6E45F082FF153003AAA48 = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {766, 1484}}";
			sepNavSelRange = "{0, 0}";
			sepNavVisRect = "{{0, 0}, {766, 406}}";
		};
	};
	4EB6E460082FF18D003AAA48 = {
		fRef = 4E6CD57607C54E630040176B;
		isa = PBXTextBookmark;
		name = eval_al_thresh;
		rLen = 14;
		rLoc = 2101;
		rType = 0;
		vrLen = 669;
		vrLoc = 2539;
	};
	4EB6E463082FF18D003AAA48 = {
		fRef = 4EB6E45F082FF153003AAA48;
		isa = PBXTextBookmark;
		name = "stabilization.c: 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 646;
		vrLoc = 0;
	};
	4EB6E510083143AE003AAA48 = {
		fRef = 4E02C48E082F816D00EC0863;
		isa = PBXTextBookmark;
		name = "convolution.c: 104";
		rLen = 0;
		rLoc = 2624;
		rType = 0;
		vrLen = 598;
		vrLoc = 2261;
	};
	4ECA774C08322F6D008ADA24 = {
		fRef = 4EB6E45F082FF153003AAA48;
		isa = PBXTextBookmark;
		name = "stabilization.c: 1";
		rLen = 0;
		rLoc = 0;
		rType = 0;
		vrLen = 640;
		vrLoc = 0;
	};
	4ECA77C3083241C4008ADA24 = {
		fRef = 4E6CD54C07C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "util.c: 150";
		rLen = 0;
		rLoc = 2669;
		rType = 0;
		vrLen = 464;
		vrLoc = 2325;
	};
	4ECC02D007E2065C007D664C = {
		fRef = 4E6CD56E07C54E170040176B;
		isa = PBXTextBookmark;
		name = eval_al;
		rLen = 7;
		rLoc = 1418;
		rType = 0;
		vrLen = 749;
		vrLoc = 460;
	};
	4ED2B5AF07E0E2FC00B9AA22 = {
		fRef = 4E6CD54507C54A7E0040176B;
		isa = PBXTextBookmark;
		name = "api.h: nfsft_wisdom";
		rLen = 0;
		rLoc = 3514;
		rType = 0;
		vrLen = 912;
		vrLoc = 1755;
	};
	4EDA6CF007A439F1008B1386 = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {942, 1119}}";
			sepNavSelRange = "{518, 0}";
			sepNavVisRect = "{{0, 0}, {942, 423}}";
		};
	};
	4EDEC4EB07CE349A00514E5A = {
		fRef = 4EDA6CF007A439F1008B1386;
		isa = PBXTextBookmark;
		name = "main.1: 14";
		rLen = 0;
		rLoc = 518;
		rType = 0;
		vrLen = 957;
		vrLoc = 0;
	};
	8DD76F620486A84900D96B5E = {
		activeExec = 0;
		executables = (
			4EB20A1E07D4B30C00FD1AB8,
		);
	};
}
